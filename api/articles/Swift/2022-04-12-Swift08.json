{"title":"8)🍎Swift - Coordinator 패턴.02","uid":"c6e16700a7ef39990817280778f95b8a","slug":"Swift/2022-04-12-Swift08","date":"2022-04-11T15:00:00.000Z","updated":"2023-03-31T10:41:50.034Z","comments":true,"path":"api/articles/Swift/2022-04-12-Swift08.json","keywords":null,"cover":null,"content":"<h3 id=\"TabBar-Coordinator-패턴\"><a href=\"#TabBar-Coordinator-패턴\" class=\"headerlink\" title=\"TabBar + Coordinator 패턴\"></a>TabBar + Coordinator 패턴</h3><p>코디네이터 패턴을 조금 응용하면 TabBar에도 적용을 할 수가 있습니다. 오늘은 단순 적용이기 때문에 코드 위주로 쓱쓱 지나갈게요!</p>\n<script src=\"https://gist.github.com/StanSign/7e78c70a93c51b47a626b103723a2d3d.js?file=TabBarCoordinator.swift\"></script>\n\n<p>다른 기본적인 부분은 TabBar 구성과 동일합니다.</p>\n<p>중요한 곳은 바로 여기!</p>\n<script src=\"https://gist.github.com/StanSign/7e78c70a93c51b47a626b103723a2d3d.js?file=startTabCoordinator.swift\"></script>\n\n<p>Home이라는 페이지에는 Home Coordinator의 start()를 call해서 구성하는 부분이죠! 동시에 코디네이터 패턴을 적용시키기 위해  finishDelegate도 등록하면서 childCoordinator에 해당 코디네이터를 등록시켜주는 작업까지 이루어졌습니다. </p>\n<p>이번엔 Home Coordinator 파일을 살펴볼까요?</p>\n<script src=\"https://gist.github.com/StanSign/7e78c70a93c51b47a626b103723a2d3d.js?file=HomeCoordinator.swift\"></script>\n\n<p>이전 게시물의 코디네이터와 비슷한 구조를 지니고 있죠. Navigation Controller를 받아오고, View Model도 등록해주었습니다. </p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> homeStoryboard <span class=\"token operator\">=</span> <span class=\"token class-name\">UIStoryboard</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"Home\"</span></span><span class=\"token punctuation\">,</span> bundle<span class=\"token punctuation\">:</span> <span class=\"token nil constant\">nil</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> homeVC <span class=\"token operator\">=</span> homeStoryboard<span class=\"token punctuation\">.</span><span class=\"token function\">instantiateViewController</span><span class=\"token punctuation\">(</span>withIdentifier<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"HomeVC\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span><span class=\"token operator\">!</span> <span class=\"token class-name\">HomeViewController</span>\n<span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>homeViewController <span class=\"token operator\">=</span> homeVC<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>이 부분은 제가 storyboard를 사용하는 것을 선호하기 때문에 이렇게 사용하였습니다.</p>\n<p>코드로 UI 구성을 하실 분들은</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\"><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>homeVC <span class=\"token operator\">=</span> <span class=\"token class-name\">HomeViewController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>이렇게만 넣어주시면 됩니다!</p>\n","text":"TabBar + Coordinator 패턴코디네이터 패턴을 조금 응용하면 TabBar에도 적용을 할 수가 있습니다. 오늘은 단순 적용이기 때문에 코드 위주로 쓱쓱 지나갈게요! 다른 기본적인 부분은 TabBar 구성과 동일합니다. 중요한 곳은 바로 여기...","link":"","photos":[],"count_time":{"symbolsCount":737,"symbolsTime":"1 mins."},"categories":[{"name":"Swift","slug":"Swift","count":30,"path":"api/categories/Swift.json"}],"tags":[{"name":"Swift","slug":"Swift","count":78,"path":"api/tags/Swift.json"},{"name":"iOS","slug":"iOS","count":78,"path":"api/tags/iOS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#TabBar-Coordinator-%ED%8C%A8%ED%84%B4\"><span class=\"toc-text\">TabBar + Coordinator 패턴</span></a></li></ol>","author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}},"mapped":true,"prev_post":{"title":"1)📘 Python - asyncio","uid":"a531efef964a2f4190bd13943c878d7b","slug":"Python/2022-05-04-Python01","date":"2022-05-03T15:00:00.000Z","updated":"2023-03-31T10:39:43.812Z","comments":true,"path":"api/articles/Python/2022-05-04-Python01.json","keywords":null,"cover":null,"text":"asyncioasyncio란?asyncio는 파이썬에서 사용할 수 있는 비동기 프로그래밍 모듈입니다. async&#x2F;await 함수를 통해 동시적으로 여러 작업들을 수행시킬 수 있습니다. 코루틴을 사용하여 작동하며, 이벤트 루프를 생성하고 관리함...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"python","slug":"python","count":4,"path":"api/categories/python.json"}],"tags":[{"name":"Python","slug":"Python","count":6,"path":"api/tags/Python.json"},{"name":"asyncio","slug":"asyncio","count":1,"path":"api/tags/asyncio.json"}],"author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}}},"next_post":{"title":"7)🍎Swift - Coordinator 패턴.01","uid":"69ea212f10e69614cb613a9eeb1f8524","slug":"Swift/2022-04-08-Swift07","date":"2022-04-07T15:00:00.000Z","updated":"2023-03-31T10:41:39.606Z","comments":true,"path":"api/articles/Swift/2022-04-08-Swift07.json","keywords":null,"cover":null,"text":"진짜로 이 프로젝트가 이렇게 이거저거 많이 해보게 될 줄은 몰랐는데.. 아무래도 이거저거 너무 많이 해보느라 이해가 부족하게 넘어가는 부분도 있는 것 같아요. 마무리 되면 래핑을 한번 해봐야겠습니다 😭 이번에는 Coordinator 패턴입니다. Vie...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"Swift","slug":"Swift","count":30,"path":"api/categories/Swift.json"}],"tags":[{"name":"Swift","slug":"Swift","count":78,"path":"api/tags/Swift.json"},{"name":"iOS","slug":"iOS","count":78,"path":"api/tags/iOS.json"},{"name":"Coordinator","slug":"Coordinator","count":1,"path":"api/tags/Coordinator.json"}],"author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}}}}