{"title":"27)🍎 Swift - CollectionView의 Cell/View에서의 subscribe 문제","uid":"c1d9a7680cb448c25291810a696ba7e7","slug":"Swift/2023-04-12-Swift27","date":"2023-04-11T15:00:00.000Z","updated":"2023-04-12T11:34:37.195Z","comments":true,"path":"api/articles/Swift/2023-04-12-Swift27.json","keywords":null,"cover":"https://i.imgur.com/asYxn3y.png","content":"<h1 id=\"❓-CollectionView의-HeaderView를-구독하는-과정에서-문제-발생\"><a href=\"#❓-CollectionView의-HeaderView를-구독하는-과정에서-문제-발생\" class=\"headerlink\" title=\"❓ CollectionView의 HeaderView를 구독하는 과정에서 문제 발생\"></a>❓ CollectionView의 HeaderView를 구독하는 과정에서 문제 발생</h1><ul>\n<li><code>HeaderView</code>의 버튼을 <code>tap</code>하면 바인딩된 <code>Action</code>이 여러번 발생하는 문제 발생</li>\n</ul>\n<img src=\"https://i.imgur.com/weOyyG5.gif\" width=\"300\">\n\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">\nconfigureSupplementaryView<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span> dataSource<span class=\"token punctuation\">,</span> collectionView<span class=\"token punctuation\">,</span> kind<span class=\"token punctuation\">,</span> indexPath <span class=\"token keyword\">in</span>\n\n  <span class=\"token keyword\">let</span> sectionItem <span class=\"token operator\">=</span> dataSource<span class=\"token punctuation\">[</span>indexPath<span class=\"token punctuation\">.</span>section<span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">let</span> header <span class=\"token operator\">=</span> collectionView<span class=\"token punctuation\">.</span><span class=\"token function\">dequeueReusableSupplementaryView</span><span class=\"token punctuation\">(</span>\n\n    ofKind<span class=\"token punctuation\">:</span> kind<span class=\"token punctuation\">,</span>\n\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">:</span> indexPath<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token class-name\">HeaderView</span>\n\n  header<span class=\"token punctuation\">.</span>reactor <span class=\"token operator\">=</span> <span class=\"token class-name\">HeaderViewReactor</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">:</span> sectionItem<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">)</span>\n\n  header<span class=\"token punctuation\">.</span>rx<span class=\"token punctuation\">.</span>rightButtonDidTap\n\n    <span class=\"token punctuation\">.</span>map <span class=\"token punctuation\">&#123;</span> <span class=\"token class-name\">Reactor</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Action</span><span class=\"token punctuation\">.</span><span class=\"token function\">rightButtonDidTap</span><span class=\"token punctuation\">(</span>sectionItem<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">:</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>reactor<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">)</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token function\">disposed</span><span class=\"token punctuation\">(</span>by<span class=\"token punctuation\">:</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>disposeBag<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> header\n\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>해당 <code>HeaderView</code>는 위와 같이 할당되어 있습니다.</p>\n<h2 id=\"의심-1-DashboardFlow의-복제\"><a href=\"#의심-1-DashboardFlow의-복제\" class=\"headerlink\" title=\"의심 1. DashboardFlow의 복제?\"></a>의심 1. <code>DashboardFlow</code>의 복제?</h2><p>해당 문제가 발생한 시점이 <code>DashboardFlow</code>를 건드릴 때였고, 확신을 갖지 못한 상태에서 작업을 하고 있었기 때문에 우선적으로 의심하였습니다.</p>\n<p>실제로 다른 <code>Flow</code>로 이동 후에 다시 돌아와 같은 작업을 수행하면 횟수가 증가하는 현상을 발견하였기에 의심을 키워가고 있었지만…</p>\n<p><img src=\"https://i.imgur.com/J3ZXoPW.png\"></p>\n<p>메모리 스냅샷을 살펴본 결과 <code>DashboardFlow</code>는 단 한 개만 생성되어있다..</p>\n<p>추가적으로 의심되던 부분인 <code>.contribute(withNext: self.rootViewController)</code> 부분을 주석처리하고 앱을 실행해도 같은 문제가 발생하는 것을 보아 이 부분은 문제가 아닌 것으로 보임..!</p>\n<h2 id=\"의심-2-모든-HeaderView의-Action이-트리거되었다\"><a href=\"#의심-2-모든-HeaderView의-Action이-트리거되었다\" class=\"headerlink\" title=\"의심 2. 모든 HeaderView의 Action이 트리거되었다..?\"></a>의심 2. 모든 <code>HeaderView</code>의 <code>Action</code>이 트리거되었다..?</h2><p><code>HomeViewReactor</code>의 해당 <code>Action</code>을 받는 부분에서 로깅을 해보았다.</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">\n<span class=\"token keyword\">case</span> <span class=\"token punctuation\">.</span><span class=\"token function\">rightButtonDidTap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> sectionType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n  <span class=\"token keyword\">let</span> type <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"</span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">sectionType</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\">\"</span></span>\n\n  <span class=\"token function\">os_log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">\"</span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">type</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">switch</span> sectionType <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token keyword\">case</span> <span class=\"token punctuation\">.</span>upcoming<span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>steps<span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AppStep</span><span class=\"token punctuation\">.</span>reminderIsRequired<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">case</span> <span class=\"token punctuation\">.</span>timeline<span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>steps<span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AppStep</span><span class=\"token punctuation\">.</span><span class=\"token function\">filterIsRequired</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>currentSortType<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://i.imgur.com/4wPULeh.png\"></p>\n<p>그랬더니 두 개의 섹션(<code>timeline</code>, <code>upcoming</code>)에서 각 두 번씩 로깅이 되고 있는 것을 발견하였다.</p>\n<p>아니 그런데.. </p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">\nconfigureSupplementaryView<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span> dataSource<span class=\"token punctuation\">,</span> collectionView<span class=\"token punctuation\">,</span> kind<span class=\"token punctuation\">,</span> indexPath <span class=\"token keyword\">in</span>\n\n  <span class=\"token keyword\">let</span> sectionItem <span class=\"token operator\">=</span> dataSource<span class=\"token punctuation\">[</span>indexPath<span class=\"token punctuation\">.</span>section<span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">let</span> header <span class=\"token operator\">=</span> collectionView<span class=\"token punctuation\">.</span><span class=\"token function\">dequeueReusableSupplementaryView</span><span class=\"token punctuation\">(</span>\n\n    ofKind<span class=\"token punctuation\">:</span> kind<span class=\"token punctuation\">,</span>\n\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">:</span> indexPath<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token class-name\">HeaderView</span>\n\n  header<span class=\"token punctuation\">.</span>reactor <span class=\"token operator\">=</span> <span class=\"token class-name\">HeaderViewReactor</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">:</span> sectionItem<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">)</span>\n\n  header<span class=\"token punctuation\">.</span>rx<span class=\"token punctuation\">.</span>rightButtonDidTap\n\n    <span class=\"token punctuation\">.</span>map <span class=\"token punctuation\">&#123;</span> <span class=\"token class-name\">Reactor</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Action</span><span class=\"token punctuation\">.</span><span class=\"token function\">rightButtonDidTap</span><span class=\"token punctuation\">(</span>sectionItem<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">:</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>reactor<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">)</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token function\">disposed</span><span class=\"token punctuation\">(</span>by<span class=\"token punctuation\">:</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>disposeBag<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> header\n\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>drive</code>로 구독하고 있는 것도 아니고 <code>bind</code>로 구독하고 있어서 스트림이 공유되는 것도 아닌데 왜 모든 헤더에서 <code>Action</code>이 트리거 되는거지..?</p>\n<h2 id=\"❗-실마리-발견\"><a href=\"#❗-실마리-발견\" class=\"headerlink\" title=\"❗ 실마리 발견\"></a>❗ 실마리 발견</h2><p><img src=\"https://i.imgur.com/idEfexs.png\"></p>\n<p>그러던 중 헬프를 요청한 팀원에게 받은 댓글…!</p>\n<p>애초에 구독이 여러번 되고 있다는 제보…!</p>\n<p>바로 테스트 돌입..</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">\n<span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>collectionView<span class=\"token punctuation\">.</span>rx<span class=\"token punctuation\">.</span>didEndDisplayingSupplementaryView\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">asDriver</span><span class=\"token punctuation\">(</span>onErrorRecover<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token omit keyword\">_</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">drive</span><span class=\"token punctuation\">(</span>with<span class=\"token punctuation\">:</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> onNext<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token omit keyword\">_</span><span class=\"token punctuation\">,</span> endDisplayingView <span class=\"token keyword\">in</span>\n\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>endDisplayingView<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token function\">disposed</span><span class=\"token punctuation\">(</span>by<span class=\"token punctuation\">:</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>disposeBag<span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>위 처럼 <code>HeaderView</code>가 화면에서 사라질 때마다 로깅을 하고 실행을 해보았다.</p>\n<p><img src=\"https://i.imgur.com/fkY0pV8.png\"></p>\n<p><img src=\"https://i.imgur.com/zDwYTH9.png\"></p>\n<p>우선 <code>HomeVC</code>가 로드 되며 두 번씩 출력이 되고..</p>\n<p><img src=\"https://i.imgur.com/GCsSh4w.gif\"></p>\n<img src=\"https://i.imgur.com/tQb5MQA.gif\" width=\"300\">\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>기본 2회 + <code>endDisplaying</code> 1회 → 3회</p></blockquote>\n<img src=\"https://i.imgur.com/UvWqOgH.gif\" width=\"300\">\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>기본 2회 + <code>endDisplaying</code> 3회 → 5회  </p></blockquote>\n<p><code>HeaderView</code>를 <code>didEndDisplaying</code> 시킬 때마다 해당 현상의 횟수가 증가하는 것을 확인했다..</p>\n<p>어떻게 찾았대…</p>\n<p>그래서 원인은 알았는데 어떻게 해결하지..?</p>\n<h2 id=\"해결\"><a href=\"#해결\" class=\"headerlink\" title=\"해결\"></a>해결</h2><p><img src=\"https://i.imgur.com/OuJBUlk.png\"></p>\n<p>혹시나 싶어서 <code>HeaderView</code> 자체는 몇개인지 확인해보았습니다.</p>\n<p>여러번 <code>endDisplaying</code> 시켜준 뒤 확인해보았지만 정상적으로 두 개만 메모리에 올라가있는 상황이네요…</p>\n<p><code>View</code> 자체는 문제가 없지만 <code>subscribe</code>만 여러번 되고 있고, 그것들이 유지되고 있다는 상황입니다..</p>\n<h2 id=\"해결-시도-1\"><a href=\"#해결-시도-1\" class=\"headerlink\" title=\"해결 시도 #1\"></a>해결 시도 #1</h2><p>결국 문제는 <code>HeaderView</code>는 재사용되기 때문에 <code>didEndDisplaying</code> 된 후 다시 <code>willDisplay</code> 될 때마다 <code>configureSupplementaryView</code>가 실행되어서 새로운 구독이 늘어나고 있는 것이다.</p>\n<p>그러면 <code>didEndDisplaying</code>이나 <code>willDisplay</code>가 될 때마다 구독을 해제해주면 되는 것이 아닌가..?</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">\n<span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>collectionView<span class=\"token punctuation\">.</span>rx<span class=\"token punctuation\">.</span>didEndDisplayingSupplementaryView\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">asDriver</span><span class=\"token punctuation\">(</span>onErrorRecover<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token omit keyword\">_</span> <span class=\"token keyword\">in</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">drive</span><span class=\"token punctuation\">(</span>with<span class=\"token punctuation\">:</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> onNext<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token omit keyword\">_</span><span class=\"token punctuation\">,</span> endDisplayingView <span class=\"token keyword\">in</span>\n\n    <span class=\"token keyword\">let</span> <span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">,</span> <span class=\"token omit keyword\">_</span><span class=\"token punctuation\">,</span> <span class=\"token omit keyword\">_</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> endDisplayingView\n\n    <span class=\"token keyword\">guard</span> <span class=\"token keyword\">let</span> view <span class=\"token operator\">=</span> view <span class=\"token keyword\">as</span><span class=\"token operator\">?</span> <span class=\"token class-name\">HeaderView</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">)</span>\n\n    view<span class=\"token punctuation\">.</span>disposeBag <span class=\"token operator\">=</span> <span class=\"token class-name\">DisposeBag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">disposed</span><span class=\"token punctuation\">(</span>by<span class=\"token punctuation\">:</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>disposeBag<span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>그래서 위와 같이 고쳐보았다.</p>\n<img src=\"https://i.imgur.com/ED7xuHs.gif\" width=\"300\">\n\n<p>하지만 어림도 없지..</p>\n<p>새로운 <code>DisposeBag</code>으로 갈아 끼워주는 것 만으로는 구독이 해제되지 않고 있다.</p>\n<h2 id=\"해결시도-2\"><a href=\"#해결시도-2\" class=\"headerlink\" title=\"해결시도 #2\"></a>해결시도 #2</h2><p>해결 시도 #2 이긴 하지만 도중에 해결 방법을 찾아버렸습니다.</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">\nheader<span class=\"token punctuation\">.</span>rx<span class=\"token punctuation\">.</span><span class=\"token function\">methodInvoked</span><span class=\"token punctuation\">(</span><span class=\"token other-directive property\">#selector</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UICollectionViewDelegate</span><span class=\"token punctuation\">.</span><span class=\"token function\">collectionView</span><span class=\"token punctuation\">(</span><span class=\"token omit keyword\">_</span><span class=\"token punctuation\">:</span>didEndDisplayingSupplementaryView<span class=\"token punctuation\">:</span>forElementOfKind<span class=\"token punctuation\">:</span>at<span class=\"token punctuation\">:</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>onNext<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n  \n\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">disposed</span><span class=\"token punctuation\">(</span>by<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token other-directive property\">#T</span>#<span class=\"token other-directive property\">#DisposeBag</span>#<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>여기까지 작성을 했는데요.. <code>diseposed(by:)</code>를 작성하는 도중에 갑자기 의문이 들었습니다.</p>\n<p>손이 가는대로 <code>disposed(by: self.disposeBag)</code>를 치던 찰나…</p>\n<p>머릿속 잠재의식이 저를 한 대 쳤습니다..</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">\nheader<span class=\"token punctuation\">.</span>rx<span class=\"token punctuation\">.</span>rightButtonDidTap\n\n  <span class=\"token punctuation\">.</span>map <span class=\"token punctuation\">&#123;</span> <span class=\"token class-name\">Reactor</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Action</span><span class=\"token punctuation\">.</span><span class=\"token function\">rightButtonDidTap</span><span class=\"token punctuation\">(</span>sectionItem<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>onNext<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>reactor<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">.</span><span class=\"token function\">onNext</span><span class=\"token punctuation\">(</span><span class=\"token short-argument\">$0</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">disposed</span><span class=\"token punctuation\">(</span>by<span class=\"token punctuation\">:</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>disposeBag<span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>다시 <code>subscribe</code>를 하던 코드로 돌아가봅시다.</p>\n<p>여기서 <code>self</code>는 <code>HeaderView</code>가 아니라 <code>HomeViewController</code>입니다.</p>\n<p><code>HeaderView</code>의 구독은 <code>HeaderView</code>의 <code>dequeueReusable</code>에 따라 동작해야하는데 말이죠…</p>\n<p>그래서 해결 방법은 아주 간단합니다.</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">\nheader<span class=\"token punctuation\">.</span>rx<span class=\"token punctuation\">.</span>rightButtonDidTap\n\n  <span class=\"token punctuation\">.</span>map <span class=\"token punctuation\">&#123;</span> <span class=\"token class-name\">Reactor</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Action</span><span class=\"token punctuation\">.</span><span class=\"token function\">rightButtonDidTap</span><span class=\"token punctuation\">(</span>sectionItem<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>onNext<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>reactor<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">.</span><span class=\"token function\">onNext</span><span class=\"token punctuation\">(</span><span class=\"token short-argument\">$0</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">disposed</span><span class=\"token punctuation\">(</span>by<span class=\"token punctuation\">:</span> header<span class=\"token punctuation\">.</span>disposeBag<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 👊 이 부분</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>self.dispseBag</code>을 <code>header.disposeBag</code>으로 바꿔주기만 하면 됩니다..</p>\n<p>오늘도 또 한 번 생각없이 하는 코딩은 위험하다는 것을 느끼고 지나갑니다..</p>\n<h2 id=\"🎉-해결\"><a href=\"#🎉-해결\" class=\"headerlink\" title=\"🎉 해결!\"></a>🎉 해결!</h2><img src=\"https://i.imgur.com/6LVYlKL.gif\" width=\"300\">\n\n<p>얏호..!</p>\n<p>휴.. 반성해라 나 자신..</p>\n","feature":true,"text":"❓ CollectionView의 HeaderView를 구독하는 과정에서 문제 발생 HeaderView의 버튼을 tap하면 바인딩된 Action이 여러번 발생하는 문제 발생 configureSupplementaryView: &#123; dataSourc...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"Swift","slug":"Swift","count":30,"path":"api/categories/Swift.json"}],"tags":[{"name":"Swift","slug":"Swift","count":78,"path":"api/tags/Swift.json"},{"name":"iOS","slug":"iOS","count":78,"path":"api/tags/iOS.json"},{"name":"Favor","slug":"Favor","count":6,"path":"api/tags/Favor.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E2%9D%93-CollectionView%EC%9D%98-HeaderView%EB%A5%BC-%EA%B5%AC%EB%8F%85%ED%95%98%EB%8A%94-%EA%B3%BC%EC%A0%95%EC%97%90%EC%84%9C-%EB%AC%B8%EC%A0%9C-%EB%B0%9C%EC%83%9D\"><span class=\"toc-text\">❓ CollectionView의 HeaderView를 구독하는 과정에서 문제 발생</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%EC%9D%98%EC%8B%AC-1-DashboardFlow%EC%9D%98-%EB%B3%B5%EC%A0%9C\"><span class=\"toc-text\">의심 1. DashboardFlow의 복제?</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%EC%9D%98%EC%8B%AC-2-%EB%AA%A8%EB%93%A0-HeaderView%EC%9D%98-Action%EC%9D%B4-%ED%8A%B8%EB%A6%AC%EA%B1%B0%EB%90%98%EC%97%88%EB%8B%A4\"><span class=\"toc-text\">의심 2. 모든 HeaderView의 Action이 트리거되었다..?</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%9D%97-%EC%8B%A4%EB%A7%88%EB%A6%AC-%EB%B0%9C%EA%B2%AC\"><span class=\"toc-text\">❗ 실마리 발견</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%ED%95%B4%EA%B2%B0\"><span class=\"toc-text\">해결</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%ED%95%B4%EA%B2%B0-%EC%8B%9C%EB%8F%84-1\"><span class=\"toc-text\">해결 시도 #1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%ED%95%B4%EA%B2%B0%EC%8B%9C%EB%8F%84-2\"><span class=\"toc-text\">해결시도 #2</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%F0%9F%8E%89-%ED%95%B4%EA%B2%B0\"><span class=\"toc-text\">🎉 해결!</span></a></li></ol></li></ol>","author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}},"mapped":true,"prev_post":{"title":"28)🍎 Swift - RxDataSources와 reloadData","uid":"865af57bf1f8e18b3c920c89fcdfd418","slug":"Swift/2023-05-07-Swift28","date":"2023-05-06T15:00:00.000Z","updated":"2023-05-08T15:56:49.644Z","comments":true,"path":"api/articles/Swift/2023-05-07-Swift28.json","keywords":null,"cover":"https://i.imgur.com/asYxn3y.png","text":"😵 DataSource를 reload 하는 과정에서 문제 발생 MyPage를 편집하는 View를 구현하던 중 하나의 Section 값이 업데이트 되면 다른 Section의 값이 초기값으로 돌아가는 현상을 마주했습니다. 해당 View는 하나의 UICol...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"Swift","slug":"Swift","count":30,"path":"api/categories/Swift.json"}],"tags":[{"name":"Swift","slug":"Swift","count":78,"path":"api/tags/Swift.json"},{"name":"iOS","slug":"iOS","count":78,"path":"api/tags/iOS.json"},{"name":"Favor","slug":"Favor","count":6,"path":"api/tags/Favor.json"}],"author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}},"feature":true},"next_post":{"title":"29)🍎 Swift - 인스타그램 스토리로 공유하기","uid":"96468e592e7cdf6f399481c66d5c9acd","slug":"Swift/2023-05-30-Swift29","date":"2023-05-29T15:00:00.000Z","updated":"2023-06-08T08:15:52.964Z","comments":true,"path":"api/articles/Swift/2023-05-30-Swift29.json","keywords":null,"cover":"https://i.imgur.com/YnrGnKE.png","text":"인스타그램 스토리 공유오늘은 앱에서 얻어낸 사진을 인스타그램 스토리로 공유하는 법을 공부해보겠습니다. Instagram - Sharing to stories 해당 문서를 따라가며 진행해보죠! 앱 ID 휙득하기 가장 먼저 눈에 띄는 경고문이 있네요! 다...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"Swift","slug":"Swift","count":30,"path":"api/categories/Swift.json"}],"tags":[{"name":"Swift","slug":"Swift","count":78,"path":"api/tags/Swift.json"},{"name":"iOS","slug":"iOS","count":78,"path":"api/tags/iOS.json"},{"name":"Favor","slug":"Favor","count":6,"path":"api/tags/Favor.json"}],"author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}}}}