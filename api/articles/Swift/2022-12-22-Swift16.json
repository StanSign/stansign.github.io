{"title":"16)🍎 Swift - PHPicker","uid":"79bbbda6f45f64c92a28adda5128658d","slug":"Swift/2022-12-22-Swift16","date":"2022-12-21T15:00:00.000Z","updated":"2023-03-31T10:43:04.419Z","comments":true,"path":"api/articles/Swift/2022-12-22-Swift16.json","keywords":null,"cover":[],"content":"<h1 id=\"PHPicker\"><a href=\"#PHPicker\" class=\"headerlink\" title=\"PHPicker\"></a>PHPicker</h1><p>토이 프로젝트를 진행하던 중에 이미지를 선택해서 업로드하는 동작이 필요했습니다. </p>\n<p>당연히 처음에는 자료가 많은 <code>UIImagePickerController</code>를 사용하고자 했습니다.</p>\n<p>이 때는 <code>PHPicker</code>라는 모듈이 있는지도 몰랐었죠.</p>\n<p>기능이 굉장히 제한적이라는 사실에 한탄하며 공부를 하던 중에 iOS14에 기존의 <code>UIImagePickerController</code>를 대체하고자 <code>PHPicker</code>가 등장했다는 소식을 접하게 됐습니다.</p>\n<p>기본 사진 앱에 있는 다중선택&#x2F;줌인아웃&#x2F;검색 기능이 포함되어 있다고 하네요..! 🫢</p>\n<h2 id=\"PhotoKit\"><a href=\"#PhotoKit\" class=\"headerlink\" title=\"PhotoKit\"></a>PhotoKit</h2><p>사실 이 <code>PHPicker</code> 라는 놈.. 혼자 떡하니 등장했던 건 아닙니다.</p>\n<p>애플이 라이브 포토 등을 추가하며 사진과 비디오 기능에 힘을 주기 위해 개발한 <code>PhotoKit</code>에 포함된 모듈들 중 하나입니다.</p>\n<p>역시 공식 문서가 정보를 찾기엔 가장 좋겠죠?</p>\n<p><a href=\"https://developer.apple.com/documentation/photokit\">Technology - PhotoKit</a></p>\n<p>새로운 API를 소개하는 WWDC에서도 당연히 소개했던 적이 있습니다.</p>\n<p><a href=\"https://developer.apple.com/videos/play/wwdc2020/10652/\">WWDC2020 - Meet the new Photos picker</a></p>\n<p>세션 제목에도 “Photos”라고 강조를 해두었네요.</p>\n<p>개발자들이 얼마나 <em>여러 사진 선택</em>을 요구했었는지 확인할 수 있는 대목이 아닌가 싶습니다.</p>\n<p>살짝쿵 2021년과 2022년 세션에서도 소개된 내용을 살펴보니, 2021년에는 ProRAW 포맷 소개에 힘을 준 만큼 새로운 포맷 지원을 소개했고 2022년에는 실리콘 맥과 함께 떡상한 macOS에서도 PHPicker를 제대로 지원한다는 내용들이 있네요.</p>\n<p>이미 기존의 <code>UIImagePicker</code>를 완전히 대체한 것 같습니다.</p>\n<p>자 그래서 핵심은 뭐냐..?</p>\n<p><code>PHPicker</code>는 <code>PhotoKit</code> 중에서도 PhotosUI 프레임워크에 포함되어 있기 때문에 사용하려면 <code>PhotosUI</code>를 <code>import</code>해야 합니다.</p>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">import PhotosUI<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"Photos-Picker의-이점\"><a href=\"#Photos-Picker의-이점\" class=\"headerlink\" title=\"Photos Picker의 이점\"></a>Photos Picker의 이점</h3><p>그래서 애플은 왜 <code>Photos Picker</code>(<code>PHPicker</code>)를 사용해야 한다고 할까요?</p>\n<p>기존의 <code>UIImagePicker</code>에 대응되는 6가지 이점을 내세우고 있습니다.</p>\n<ol>\n<li>이미지 로딩의 지연과 복구 UI</li>\n<li>RAW와 파노라마 이미지 등의 크고 복잡한 애셋을 안전하게 핸들링</li>\n<li><code>UIImagePickerController</code>에서는 불가능한 유저 선택 옵션</li>\n<li>라이브 포토만을 선택할 수 있는 설정 제공</li>\n<li>라이브러리 접근 없이 <a href=\"https://developer.apple.com/documentation/photokit/phlivephoto\"><code>PHLivePhoto</code></a> 객체 사용 가능</li>\n<li>유효하지 않은 입력에 대한 까다로운 validation</li>\n</ol>\n<p>기존의 앱들은 핸드폰에 저장된 사진들에 접근하기 위해서 접근 요청을 했었죠?</p>\n<p><img src=\"https://i.imgur.com/bnNGwKA.png\"></p>\n<p>위 사진처럼요.</p>\n<p>하지만 새로운 <code>PHPicker</code>를 사용하면 프로필 사진 선택등의 단순한 사진 라이브러리 작업으로는 권한을 요구하지 않는다고 합니다.</p>\n<p>사진 편집, 카메라 앱등은 여전히 권한을 요구한다고 하네요.</p>\n<p>또한 사진을 단순히 저장하는 작업 또한 사진 저장 권한이라는 낮은 레벨의 권한만을 부여해서 사용자의 아이폰을 더 안전하게 지킬 수 있다고 합니다.</p>\n<p><img src=\"https://i.imgur.com/0CAeWyn.png\"></p>\n<p>가장 중요한 점은 보안에서입니다.</p>\n<p><code>PHPicker</code>는 소프트웨어적인 캡처에서 안전합니다.</p>\n<p>스크린샷을 찍을 때 모든 컨텐츠(사진, 비디오)들을 렌더링하지 않은 상태로 캡처하여 불법 프로그램으로 인해 라이브러리가 캡처되어 개인 정보가 유출되는 것을 막을 수 있다고 합니다.</p>\n<p>이게 어떻게 가능한 것이냐?</p>\n<p><code>PHPicker</code>는 앱 안에서 실행되는 것 같은 UI를 갖지만 사실을 독립된 다른 프로세스입니다. 위 사진에서처럼요.</p>\n<p>앱의 모양을 그저 렌더링하여 배경으로 보여주고 있는 것이죠.</p>\n<p>따라서 앱은 <code>PHPicker</code>의 기능들을 직접 사용하고 있는 것이 아니라, <code>PHPicker</code>는 따로 동작하고 유저가 선택한 컨텐츠들에 한해서만 정보를 제공하는 것입니다.</p>\n<h2 id=\"PHPickerViewController\"><a href=\"#PHPickerViewController\" class=\"headerlink\" title=\"PHPickerViewController\"></a><code>PHPickerViewController</code></h2><p><img src=\"https://i.imgur.com/GsQf6rq.png\"></p>\n<p>위 사진에서 알 수 있듯이 <code>PHPickerViewController</code>는 <code>PHPickerConfiguration</code>을 통해 생성되고 제어할 수 있습니다.</p>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">var configuration &#x3D; PHPickerConfiguration()<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"filter와-selectionLimit\"><a href=\"#filter와-selectionLimit\" class=\"headerlink\" title=\"filter와 selectionLimit\"></a>filter와 selectionLimit</h3><p><code>filter</code> 프로퍼티로는 <code>PHPicker</code>에서 선택할 수 있는 컨텐츠 타입을 정해줄 수 있습니다.</p>\n<p><code>images</code>, <code>livePhotos</code>, <code>videos</code>, <code>screenshots</code> 등 다양한 옵션을 지원하고 있고, 따로 지정해주지 않는다면 기본값으로 <code>.all</code> 값을 갖습니다.</p>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">configuration.filter &#x3D; .images\nconfiguration.filter &#x3D; .any(of:\n\t[.images, .livePhotos, .videos]\n)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>selectionLimit</code> 프로퍼티로는 선택할 이미지의 개수를 정해줄 수 있습니다.</p>\n<p>기본값은 1이고, 음수의 값을 넣으면 앱이 크래쉬납니다.</p>\n<p><code>numberOfLines</code>와 같이 0의 값을 넣어주면 선택 개수를 제한 없이 설정해줄 수 있습니다.</p>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">configuration.selectionLimit &#x3D; 12<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>이렇게 설정해준 <code>configuration</code> 값은 <code>PHPickerViewController</code>의 파라미터로 넣어주어 적용합니다.</p>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">let imagePicker &#x3D; PHPickerViewController(configuration: configuration)\nimagePicker.delegate &#x3D; self\npresent(imagePicker, aniamted: true)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><code>UIImagePickerController</code>와 마찬가지로 <code>delegate</code>까지 위임해주고 <code>present</code>하면 사진을 고를 수 있는 화면이 <code>present</code>됩니다.</p>\n<h3 id=\"선택-결과-핸들링\"><a href=\"#선택-결과-핸들링\" class=\"headerlink\" title=\"선택 결과 핸들링\"></a>선택 결과 핸들링</h3><p>유저가 컨텐츠를 선택했다면 해당 컨텐츠들로 무언가를 해야겠죠.</p>\n<p><code>PHPicker</code>는 <code>delegate</code>의 메서드를 통해 결과를 처리해줄 수 있습니다.</p>\n<p><code>PHPickerViewControllerDelegate</code> 프로토콜을 채용해주고, </p>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">extension DefaultImagePickerCoordinator: PHPickerViewControllerDelegate &#123;\n\n    func picker(_ picker: PHPickerViewController, didFinishPicking results: [PHPickerResult]) &#123;\n\t\t&#x2F;&#x2F; do something\n    &#125;\n\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>유저가 선택을 완료했다는 버튼을 탭하면 호출되는 <code>picker(_,didFinishPicking)</code> 함수를 구현해줍니다.</p>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">func picker(_ picker: PHPickerViewController, didFinishPicking reuslts: [PHPickerResult]) &#123;\n\tpicker.dismiss(animated: true)\n\n\tlet itemProvider &#x3D; results.first?.itemProvider\n\n\tif let itemProvider &#x3D; itemProvider, itemProvider.canLoadObject(ofClass: UIImage.self) &#123;\n\t\titemProvider.loadObject(ofClass: UIImage.self) &#123; image, error in\n\t\t\tif let image &#x3D; image &#123;\n\t\t\t\t&#x2F;&#x2F; do something\n\t\t\t&#125;\n\t\t&#125;\n\t&#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>우선 <code>picker.dismiss(animated:)</code>로 <code>PHPickerView</code>를 <code>dismiss</code> 해줍니다.</p>\n<p>그 후 <code>NSItemProvider</code>라는 객체로부터 유저가 선택한 컨텐츠를 제공받을 수 있도록 초기화 과정과 실제로 불러오는 과정을 넣어줍니다.</p>\n<p>이 과정은 내부적으로 <code>async</code>하게 구현되어 있기 때문에 <code>@escaping</code> 클로저 안에서 이미지를 받아 처리해주어야 합니다.</p>\n<p>단순히 이미지나 비디오를 선택해서 받아오는 작업은 이것만으로도 충분합니다.</p>\n<p>여기까지의 작업은 사진 접근 권한을 요구하지 않지만 사진을 편집하는 등의 작업등은 사진 라이브러리 권한을 요구하고, PhotoKit의 다른 API를 활용하여 작업해야합니다.</p>\n<h2 id=\"마무리\"><a href=\"#마무리\" class=\"headerlink\" title=\"마무리\"></a>마무리</h2><p>오늘은 우선 여기까지 알아보았습니다.</p>\n<p>애플은 이미 <code>UIImagePickerView</code>를 deprecated 시켰습니다.</p>\n<p>구글 검색 결과는 아직 이전 게시물들을 상단에 노출시키고 있어 WWDC 세션을 찾아보지 않았다면 여전히 헤매고 있었을 것 같습니다.</p>\n<p>틈틈히 WWDC 구석구석을 살펴보는 습관을 가집시다!</p>\n","text":"PHPicker토이 프로젝트를 진행하던 중에 이미지를 선택해서 업로드하는 동작이 필요했습니다. 당연히 처음에는 자료가 많은 UIImagePickerController를 사용하고자 했습니다. 이 때는 PHPicker라는 모듈이 있는지도 몰랐었죠. 기능이...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"Swift","slug":"Swift","count":29,"path":"api/categories/Swift.json"}],"tags":[{"name":"Swift","slug":"Swift","count":79,"path":"api/tags/Swift.json"},{"name":"iOS","slug":"iOS","count":79,"path":"api/tags/iOS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#PHPicker\"><span class=\"toc-text\">PHPicker</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PhotoKit\"><span class=\"toc-text\">PhotoKit</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Photos-Picker%EC%9D%98-%EC%9D%B4%EC%A0%90\"><span class=\"toc-text\">Photos Picker의 이점</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHPickerViewController\"><span class=\"toc-text\">PHPickerViewController</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#filter%EC%99%80-selectionLimit\"><span class=\"toc-text\">filter와 selectionLimit</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%EC%84%A0%ED%83%9D-%EA%B2%B0%EA%B3%BC-%ED%95%B8%EB%93%A4%EB%A7%81\"><span class=\"toc-text\">선택 결과 핸들링</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\"><span class=\"toc-text\">마무리</span></a></li></ol></li></ol>","author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}},"mapped":true,"prev_post":{"title":"17)🍎 Swift - Property Wrapper","uid":"d307c77550c3e506aba3109e585568f0","slug":"Swift/2022-12-26-Swift17","date":"2022-12-25T15:00:00.000Z","updated":"2023-03-31T10:43:12.067Z","comments":true,"path":"api/articles/Swift/2022-12-26-Swift17.json","keywords":null,"cover":null,"text":"Property Wrapper오늘은 UserDefaults를 어떻게 하면 조금이라도 더 편하게 사용할 수 있을까 고민하다가 아주 좋은 친구를 발견했습니다. 바로 Property Wrapper라는 친구인데요. 이 친구는 SwiftUI와 Combine의 ...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"Swift","slug":"Swift","count":29,"path":"api/categories/Swift.json"}],"tags":[{"name":"Swift","slug":"Swift","count":79,"path":"api/tags/Swift.json"},{"name":"iOS","slug":"iOS","count":79,"path":"api/tags/iOS.json"}],"author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}}},"next_post":{"title":"45)🧰 Swift - Date","uid":"7d828fe1b889c290d917612e7e7aa09f","slug":"Allen/2022-12-06-Allen45","date":"2022-12-05T15:00:00.000Z","updated":"2023-03-31T10:35:42.504Z","comments":true,"path":"api/articles/Allen/2022-12-06-Allen45.json","keywords":null,"cover":null,"text":"앨런 Swift문법 마스터 스쿨 (온라인 BootCamp - 2개월과정) DateUTC (Coordinated Universal Time)UTC는 국제적인 표준 시간(협전 세계시)입니다. 영국의 그리니치 천문대를 기준으로 하여 전세계적인 시간 기준을 ...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"AllenBootCamp","slug":"AllenBootCamp","count":45,"path":"api/categories/AllenBootCamp.json"}],"tags":[{"name":"Swift","slug":"Swift","count":79,"path":"api/tags/Swift.json"},{"name":"iOS","slug":"iOS","count":79,"path":"api/tags/iOS.json"},{"name":"Allen","slug":"Allen","count":45,"path":"api/tags/Allen.json"}],"author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}}}}