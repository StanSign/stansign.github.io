{"title":"45)🧰 Swift - Date","uid":"7d828fe1b889c290d917612e7e7aa09f","slug":"Allen/2022-12-06-Allen45","date":"2022-12-05T15:00:00.000Z","updated":"2023-03-31T10:35:42.504Z","comments":true,"path":"api/articles/Allen/2022-12-06-Allen45.json","keywords":null,"cover":null,"content":"<p><a href=\"https://www.inflearn.com/course/%EC%8A%A4%EC%9C%84%ED%94%84%ED%8A%B8-%EB%AC%B8%EB%B2%95-%EB%A7%88%EC%8A%A4%ED%84%B0-%EC%8A%A4%EC%BF%A8\">앨런 Swift문법 마스터 스쿨 (온라인 BootCamp - 2개월과정)</a></p>\n<h1 id=\"Date\"><a href=\"#Date\" class=\"headerlink\" title=\"Date\"></a>Date</h1><h2 id=\"UTC-Coordinated-Universal-Time\"><a href=\"#UTC-Coordinated-Universal-Time\" class=\"headerlink\" title=\"UTC (Coordinated Universal Time)\"></a>UTC (Coordinated Universal Time)</h2><p>UTC는 국제적인 표준 시간(<strong>협전 세계시</strong>)입니다.</p>\n<p>영국의 그리니치 천문대를 기준으로 하여 전세계적인 시간 기준을 맞춰 사용하고 있습니다.</p>\n<p>우리나라의 경우 UTC+9의 시간을 가집니다.</p>\n<p>앱에서 시간을 다루는 경우는 굳이 생각해보지 않아도 굉장히 많겠죠?</p>\n<p>다른 모든 언어들이 날짜를 다루는 라이브러리를 제공하듯이 Swift 또한  <code>Date</code>라는 구조체를 제공하여 날짜를 사용할 수 있도록 해주었습니다.</p>\n<p>가장 단순한 예시를 들자면  <code>Date()</code>로 파라미터 없이 초기화만 해주어도 현재 시간을 반환해줍니다.</p>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">let now &#x3D; Date()\nprint(now) &#x2F;&#x2F; 2022-12-08 12:30:00 +0000\nprint(now.timeIntervalSinceReferenceDate) &#x2F;&#x2F; 647786168.423142<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Date-구조체\"><a href=\"#Date-구조체\" class=\"headerlink\" title=\"Date 구조체\"></a><code>Date</code> 구조체</h2><p><code>Date</code>를 잘 이해하려면 기준 시간을 인지하고 있어야 합니다.</p>\n<p>영국 시간을 기준으로 <code>2001.01.01. 00:00:00 UTC</code> 시간을 기준으로 잡고 계산을 합니다.</p>\n<p><code>Date</code> 구조체는 <strong>기준 시간으로부터 시간이 몇 초나 흘렀는지</strong>에 대한 정보를 담고 있습니다. </p>\n<p>하지만 기본적으로 사람이 읽기 편하도록 <code>2022-12-08 12:30:00 +0000</code>와 같이 형식을 변환하여 반환하기 때문에 이 값은 볼 일이 많지 않죠.</p>\n<p>초 단위의 값을 보고 싶다면 <code>.timeIntervalSinceReferenceDate</code>를 통해  알아낼 수 있지만 쓸 일이 많을 것 같진 않네요..!<br><em>참고로 이 함수는 값을 <code>TimeInterval</code> 타입으로 반환합니다. 이에 대한 건 뒤에 적어두도록 하겠습니다.</em></p>\n<p>또한 <code>+0000</code>을 보면 알 수 있듯이 이 시간은 각 지역의 시간에 맞추어 제공되는 것이 아니라 <strong>UTC+0</strong>시를 기준으로 제공됩니다.</p>\n<p>이 값을 지역에 맞게 제대로 사용하려면 달력(<code>Calendar</code>)이나 타임존(<code>TimeZone</code>)을 통해 변환해야 하고, <code>Date</code> 타입으로 제공되기 때문에 <code>String</code> 타입으로 변환하여 사용해야 합니다.</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>보통 기준 시간은 1970년으로 잡지 않나요…?</p></blockquote>\n<p>유닉스 기준 시간은 1970년 1월 1일이 맞습니다.</p>\n<p>그런데 애플은 이 날짜가 너무 오래전이라고 생각한 듯 싶습니다.</p>\n<p>기준 시간을 1970년으로 잡는 <code>.timeIntervalSince1970</code>  메서드도 지원하니 알아두시면 좋을 듯 합니다!</p>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">now.timeIntervalsince1970<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"Date-변환하여-날짜와-시간-다루기\"><a href=\"#Date-변환하여-날짜와-시간-다루기\" class=\"headerlink\" title=\"Date 변환하여 날짜와 시간 다루기\"></a><code>Date</code> 변환하여 날짜와 시간 다루기</h2><p>Swift에서는 <code>Date</code> 구조체를 두 가지 방법으로 변환할 수 있습니다.</p>\n<p>날짜와 시간을 계산하기 위한 <code>Calendar</code>와 문자열로 표시하기 위한 <code>DateFormatter</code>가 두 방법입니다.</p>\n<h3 id=\"Calendar\"><a href=\"#Calendar\" class=\"headerlink\" title=\"Calendar\"></a>Calendar</h3><p><code>Calendar</code>는 타입 속성의 구조체 타입으로, <code>Calendar.current</code>로 확인할 수 있습니다.</p>\n<p>양력과 음력이 있지만 기본적으로 양력으로 설정되어 있기 때문에 대부분의 경우 기본값으로 사용해도 문제 없습니다.</p>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">var calendar &#x3D; Calendar.current\nCalendar(identifier: .gregorian) &#x2F;&#x2F; 양력<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"지역-설정\"><a href=\"#지역-설정\" class=\"headerlink\" title=\"지역 설정\"></a>지역 설정</h4><p>지역마다 날짜와 시간을 표기하는 형식이 다르기 때문에 지역 설정을 해주어야 합니다.<br>&#96;</p>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">print(calendar.locale) &#x2F;&#x2F; en_US (current)\nprint(calendar.timeZone) &#x2F;&#x2F; Asia&#x2F;Seoul (current)\n\ncalendar.locale &#x3D; Locale(identifier: &quot;ko_KR&quot;)\ncalendar.timeZone &#x3D; TimeZone(identifier: &quot;Asia&#x2F;Seoul&quot;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>timeZone</code>은 기기로부터 정보를 받아와서 자동으로 서울로 설정된 것 같네요.</p>\n<p><code>identifier</code>는 필요한 값을 그때그때 검색해서 사용하시면 됩니다.</p>\n<h4 id=\"Date의-년-x2F-월-x2F-일-x2F-시-x2F-분-x2F-초를-확인하는-방법\"><a href=\"#Date의-년-x2F-월-x2F-일-x2F-시-x2F-분-x2F-초를-확인하는-방법\" class=\"headerlink\" title=\"Date의 년&#x2F;월&#x2F;일&#x2F;시&#x2F;분&#x2F;초를 확인하는 방법\"></a><code>Date</code>의 년&#x2F;월&#x2F;일&#x2F;시&#x2F;분&#x2F;초를 확인하는 방법</h4><ul>\n<li><code>.component</code> 사용</li>\n</ul>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">let year: Int &#x3D; calendar.component(.year, from: now)\nlet month: Int &#x3D; calendar.component(.month, from: now)\nlet day: Int &#x3D; calendar.component(.day, from: now)\nlet hour: Int &#x3D; calendar.component(.hour, from: now)\nlet minute: Int &#x3D; calendar.component(.minute, from: now)\nlet second: Int &#x3D; calendar.component(.second, from: now)\n&#x2F;&#x2F; 요일 (일: 1, 월: 2, ...)\nlet weekday: Int &#x3D; calendar.component(.weekday, from: now)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>열거형을 사용하여 요일 계산하기</p></blockquote>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">enum Weekday: Int &#123;\n\tcase sunday &#x3D; 1, monday, tuesday, wednesday, thursday, friday, saturday\n\n\tstatic var today: Weekday &#123;\n\t\tlet weekday: Int &#x3D; Calendar.current.component(.weekday from: Date())\n\t\treturn Weekday(rawValue: weekday)!\n\t&#125;\n&#125;\n\nlet today &#x3D; Weekday.today &#x2F;&#x2F; monday<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"한-번에-여러-데이터를-얻는-방법\"><a href=\"#한-번에-여러-데이터를-얻는-방법\" class=\"headerlink\" title=\"한 번에 여러 데이터를 얻는 방법\"></a>한 번에 여러 데이터를 얻는 방법</h4><ul>\n<li><code>.dateComponents</code> 사용</li>\n</ul>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">var myDateComp &#x3D; calendar.dateComponents([.year, .month, .day], from: now)\nprint(myDateComp.year) &#x2F;&#x2F; 2022\nprint(myDateComp.month) &#x2F;&#x2F; 12\nprint(myDateComp.day) &#x2F;&#x2F; 6<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>두 날짜 사이의 일 수 계산하기</p></blockquote>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">let startDate &#x3D; Date()\nlet endDate &#x3D; startDate.addingTimeInterval(3600 * 24 * 60)\nlet someDays &#x3D; Calendar.current.dateComponents([.day], from: startDate, to: endDate).day!\nprint(someDays) &#x2F;&#x2F; 60<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"DateFormatter\"><a href=\"#DateFormatter\" class=\"headerlink\" title=\"DateFormatter\"></a>DateFormatter</h3><p><code>DateFormatter</code>는 날짜와 시간을 원하는 형식의 문자열(<code>String</code> )으로 변환하는 방법을 제공하는 클래스입니다.</p>\n<p>RFC 3339 표준으로 작성되었기 때문에 원하는 형식을 검색해서 사용하면 됩니다.</p>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">let formatter &#x3D; DateFormatter()\n&#x2F;&#x2F; 지역 설정\nformatter.locale &#x3D; Locale(identifier: &quot;ko_KR&quot;)\n&#x2F;&#x2F; 시간대 설정\nformatter.timeZone &#x3D; TimeZone.current\n&#x2F;&#x2F; 혹은\nformatter.timeZone &#x3D; TimeZone(identifier: &quot;Asia&#x2F;Seoul&quot;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"애플이-만들어둔-기존-형식으로-생성\"><a href=\"#애플이-만들어둔-기존-형식으로-생성\" class=\"headerlink\" title=\"애플이 만들어둔 기존 형식으로 생성\"></a>애플이 만들어둔 기존 형식으로 생성</h4><pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">formatter.dateStyle &#x3D; .full &#x2F;&#x2F; &quot;Tuesday, December 6, 2022&quot;\nformatter.dateStyle &#x3D; .long &#x2F;&#x2F; &quot;December 6, 2022&quot;\nformatter.dateStyle &#x3D; .medium &#x2F;&#x2F; &quot;Dec 6, 2022&quot;\nformatter.dateStyle &#x3D; .none &#x2F;&#x2F; &quot;&quot;\nformatter.dateStyle &#x3D; .short &#x2F;&#x2F; &quot;12&#x2F;6&#x2F;22&quot;\n\nformatter.timeStyle &#x3D; .full &#x2F;&#x2F; &quot;2:53:12 PM Korean Standard Time&quot;\nformatter.timeStyle &#x3D; .long &#x2F;&#x2F; &quot;2:53:12 PM GMT+9&quot;\nformatter.timeStyle &#x3D; .medium &#x2F;&#x2F; &quot;2:53:12 PM&quot;\nformatter.timeStyle &#x3D; .none &#x2F;&#x2F; &quot;&quot;\nformatter.timeStyle &#x3D; .short &#x2F;&#x2F; &quot;2:55 PM&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","text":"앨런 Swift문법 마스터 스쿨 (온라인 BootCamp - 2개월과정) DateUTC (Coordinated Universal Time)UTC는 국제적인 표준 시간(협전 세계시)입니다. 영국의 그리니치 천문대를 기준으로 하여 전세계적인 시간 기준을 ...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"AllenBootCamp","slug":"AllenBootCamp","count":45,"path":"api/categories/AllenBootCamp.json"}],"tags":[{"name":"Swift","slug":"Swift","count":74,"path":"api/tags/Swift.json"},{"name":"iOS","slug":"iOS","count":74,"path":"api/tags/iOS.json"},{"name":"Allen","slug":"Allen","count":45,"path":"api/tags/Allen.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Date\"><span class=\"toc-text\">Date</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#UTC-Coordinated-Universal-Time\"><span class=\"toc-text\">UTC (Coordinated Universal Time)</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Date-%EA%B5%AC%EC%A1%B0%EC%B2%B4\"><span class=\"toc-text\">Date 구조체</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Date-%EB%B3%80%ED%99%98%ED%95%98%EC%97%AC-%EB%82%A0%EC%A7%9C%EC%99%80-%EC%8B%9C%EA%B0%84-%EB%8B%A4%EB%A3%A8%EA%B8%B0\"><span class=\"toc-text\">Date 변환하여 날짜와 시간 다루기</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Calendar\"><span class=\"toc-text\">Calendar</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%A7%80%EC%97%AD-%EC%84%A4%EC%A0%95\"><span class=\"toc-text\">지역 설정</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Date%EC%9D%98-%EB%85%84-x2F-%EC%9B%94-x2F-%EC%9D%BC-x2F-%EC%8B%9C-x2F-%EB%B6%84-x2F-%EC%B4%88%EB%A5%BC-%ED%99%95%EC%9D%B8%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\"><span class=\"toc-text\">Date의 년&#x2F;월&#x2F;일&#x2F;시&#x2F;분&#x2F;초를 확인하는 방법</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%ED%95%9C-%EB%B2%88%EC%97%90-%EC%97%AC%EB%9F%AC-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EC%96%BB%EB%8A%94-%EB%B0%A9%EB%B2%95\"><span class=\"toc-text\">한 번에 여러 데이터를 얻는 방법</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DateFormatter\"><span class=\"toc-text\">DateFormatter</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%95%A0%ED%94%8C%EC%9D%B4-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%91%94-%EA%B8%B0%EC%A1%B4-%ED%98%95%EC%8B%9D%EC%9C%BC%EB%A1%9C-%EC%83%9D%EC%84%B1\"><span class=\"toc-text\">애플이 만들어둔 기존 형식으로 생성</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}},"mapped":true,"prev_post":{"title":"16)🍎 Swift - PHPicker","uid":"79bbbda6f45f64c92a28adda5128658d","slug":"Swift/2022-12-22-Swift16","date":"2022-12-21T15:00:00.000Z","updated":"2023-03-31T10:43:04.419Z","comments":true,"path":"api/articles/Swift/2022-12-22-Swift16.json","keywords":null,"cover":[],"text":"PHPicker토이 프로젝트를 진행하던 중에 이미지를 선택해서 업로드하는 동작이 필요했습니다. 당연히 처음에는 자료가 많은 UIImagePickerController를 사용하고자 했습니다. 이 때는 PHPicker라는 모듈이 있는지도 몰랐었죠. 기능이...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"Swift","slug":"Swift","count":26,"path":"api/categories/Swift.json"}],"tags":[{"name":"Swift","slug":"Swift","count":74,"path":"api/tags/Swift.json"},{"name":"iOS","slug":"iOS","count":74,"path":"api/tags/iOS.json"}],"author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}}},"next_post":{"title":"44)🧰 Swift - Result","uid":"a100c7d58a4f32a64e774374f49a8b76","slug":"Allen/2022-12-05-Allen44","date":"2022-12-04T15:00:00.000Z","updated":"2023-03-31T10:35:38.474Z","comments":true,"path":"api/articles/Allen/2022-12-05-Allen44.json","keywords":null,"cover":null,"text":"앨런 Swift문법 마스터 스쿨 (온라인 BootCamp - 2개월과정) ResultResult 타입은 열거형입니다. 내부적으로 success(연관값)과 failure(연관값)을 갖고 있어요. 성공했을 때와 실패했을 때의 정보를 모두 담고 있는 것이죠...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"AllenBootCamp","slug":"AllenBootCamp","count":45,"path":"api/categories/AllenBootCamp.json"}],"tags":[{"name":"Swift","slug":"Swift","count":74,"path":"api/tags/Swift.json"},{"name":"iOS","slug":"iOS","count":74,"path":"api/tags/iOS.json"},{"name":"Allen","slug":"Allen","count":45,"path":"api/tags/Allen.json"}],"author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}}}}