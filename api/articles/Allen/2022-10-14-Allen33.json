{"title":"33)🧰 Swift - 메서드 디스패치 (Method Dispatch)","uid":"69f8880ec5c4a5498a069d7bb5807eb6","slug":"Allen/2022-10-14-Allen33","date":"2022-10-13T15:00:00.000Z","updated":"2023-03-31T10:34:18.824Z","comments":true,"path":"api/articles/Allen/2022-10-14-Allen33.json","keywords":null,"cover":null,"content":"<p><a href=\"https://www.inflearn.com/course/%EC%8A%A4%EC%9C%84%ED%94%84%ED%8A%B8-%EB%AC%B8%EB%B2%95-%EB%A7%88%EC%8A%A4%ED%84%B0-%EC%8A%A4%EC%BF%A8\">앨런 Swift문법 마스터 스쿨 (온라인 BootCamp - 2개월과정)</a></p>\n<h1 id=\"Method-Dispatch\"><a href=\"#Method-Dispatch\" class=\"headerlink\" title=\"Method Dispatch\"></a>Method Dispatch</h1><p>코드 영역에 저장된 함수&#x2F;메서드를 실행시키려면 그 주소를 알아야합니다.<br>이 메서드를 실행시키는 방법에는 크게 3가지 방법이 있습니다.</p>\n<h2 id=\"Swift가-함수를-실행시키는-방법\"><a href=\"#Swift가-함수를-실행시키는-방법\" class=\"headerlink\" title=\"Swift가 함수를 실행시키는 방법\"></a>Swift가 함수를 실행시키는 방법</h2><h3 id=\"Direct-Dispatch\"><a href=\"#Direct-Dispatch\" class=\"headerlink\" title=\"Direct Dispatch\"></a>Direct Dispatch</h3><p>다른 말로 <strong>Static Dispatch</strong>라고도 합니다.<br>어떤 테이블을 거치지 않고 메서드의 메모리 주소를 <strong>직접 삽입</strong>하여 호출하는 방법입니다.<br>그렇기 때문에 <strong>컴파일 타임</strong>에 미리 이루어지게 됩니다.<br>호출 명령 코드를 코드의 인라인에 직접 심기 때문에 <strong>가장 빠른</strong> 방법입니다.<br><strong>값타입</strong>(구조체&#x2F;열거형)에서 주로 사용됩니다.</p>\n<h3 id=\"Table-Dispatch\"><a href=\"#Table-Dispatch\" class=\"headerlink\" title=\"Table Dispatch\"></a>Table Dispatch</h3><p>다른 말로 Dynamic Dispatch라고도 부릅니다.<br>메서드의 주소를 가리키는 <strong>포인터를 배열의 형태로 보관</strong>한 후에 실행하는 방법입니다.<br>그렇기 때문에 <strong>런타임</strong>에 동작이 이루어지게 되고, 세 가지 방법 중에서는 <strong>중간의 속도</strong>를 냅니다.<br><strong>클래스와 프로토콜</strong>에 테이블(배열)이 포함되는 형태로 주로 사용됩니다. (ex: Virtual Table - 클래스, Witness Table - 프로토콜)</p>\n<h3 id=\"Message-Dispatch\"><a href=\"#Message-Dispatch\" class=\"headerlink\" title=\"Message Dispatch\"></a>Message Dispatch</h3><p>상속 구조를 <strong>모두 훑은 후</strong>에 실행할 메서드를 찾아내서 실행하는 방법입니다.<br><strong>Obj-C</strong>에서 사용되던 방법이고 속도도 가장 <strong>느려서</strong> 최근에는 많이 사용되지 않습니다.</p>\n","text":"앨런 Swift문법 마스터 스쿨 (온라인 BootCamp - 2개월과정) Method Dispatch코드 영역에 저장된 함수&#x2F;메서드를 실행시키려면 그 주소를 알아야합니다.이 메서드를 실행시키는 방법에는 크게 3가지 방법이 있습니다. Swift...","link":"","photos":[],"count_time":{"symbolsCount":679,"symbolsTime":"1 mins."},"categories":[{"name":"AllenBootCamp","slug":"AllenBootCamp","count":45,"path":"api/categories/AllenBootCamp.json"}],"tags":[{"name":"Swift","slug":"Swift","count":74,"path":"api/tags/Swift.json"},{"name":"iOS","slug":"iOS","count":74,"path":"api/tags/iOS.json"},{"name":"Allen","slug":"Allen","count":45,"path":"api/tags/Allen.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Method-Dispatch\"><span class=\"toc-text\">Method Dispatch</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Swift%EA%B0%80-%ED%95%A8%EC%88%98%EB%A5%BC-%EC%8B%A4%ED%96%89%EC%8B%9C%ED%82%A4%EB%8A%94-%EB%B0%A9%EB%B2%95\"><span class=\"toc-text\">Swift가 함수를 실행시키는 방법</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Direct-Dispatch\"><span class=\"toc-text\">Direct Dispatch</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Table-Dispatch\"><span class=\"toc-text\">Table Dispatch</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Message-Dispatch\"><span class=\"toc-text\">Message Dispatch</span></a></li></ol></li></ol></li></ol>","author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"fab fa-instagram","link":"https://www.instagram.com/nomatter_jun/"}}}},"mapped":true,"prev_post":{"title":"34)🧰 Swift - 중첩 타입 (Nested Types)","uid":"1ed6334be43ee572a89c87ad1476b5f3","slug":"Allen/2022-10-15-Allen34","date":"2022-10-14T15:00:00.000Z","updated":"2023-03-31T10:34:24.190Z","comments":true,"path":"api/articles/Allen/2022-10-15-Allen34.json","keywords":null,"cover":null,"text":"앨런 Swift문법 마스터 스쿨 (온라인 BootCamp - 2개월과정) 중첩 타입 (Nested Types)왜 사용할까? 특정 타입 안에서만 사용하기 위해 내부의 타입은 외부의 타입과 관계가 있고, 외부의 타입 없이는 의미가 없을 수 있다. 타입 간...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"AllenBootCamp","slug":"AllenBootCamp","count":45,"path":"api/categories/AllenBootCamp.json"}],"tags":[{"name":"Swift","slug":"Swift","count":74,"path":"api/tags/Swift.json"},{"name":"iOS","slug":"iOS","count":74,"path":"api/tags/iOS.json"},{"name":"Allen","slug":"Allen","count":45,"path":"api/tags/Allen.json"}],"author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"fab fa-instagram","link":"https://www.instagram.com/nomatter_jun/"}}}}},"next_post":{"title":"12)🍎 Swift - Bounds vs Frame","uid":"00b2e378bc58cce5d9b436f772921098","slug":"Swift/2022-10-11-Swift12","date":"2022-10-10T15:00:00.000Z","updated":"2023-03-31T10:42:24.785Z","comments":true,"path":"api/articles/Swift/2022-10-11-Swift12.json","keywords":null,"cover":[],"text":"오늘은 frame과 bounds의 실체와 차이점에 대해 공부해볼거에요.두 친구 모두 코드 상에서 UIView에 변경을 가할 때 자주 보게 되는 용어들이죠.근데 지금까지는 그냥 둘 다 써보고 제가 원하던 프로퍼티가 있으면 사용하곤 했습니다.view.bo...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"Swift","slug":"Swift","count":26,"path":"api/categories/Swift.json"}],"tags":[{"name":"Swift","slug":"Swift","count":74,"path":"api/tags/Swift.json"},{"name":"iOS","slug":"iOS","count":74,"path":"api/tags/iOS.json"}],"author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"fab fa-instagram","link":"https://www.instagram.com/nomatter_jun/"}}}}}}