{"title":"10)🧰 Swift - 함수.01","uid":"4c6c15ee400822c4be937fe358a91dd0","slug":"Allen/2022-09-26-Allen10","date":"2022-09-25T15:00:00.000Z","updated":"2023-03-31T10:32:22.195Z","comments":true,"path":"api/articles/Allen/2022-09-26-Allen10.json","keywords":null,"cover":null,"content":"<p><a href=\"https://www.inflearn.com/course/%EC%8A%A4%EC%9C%84%ED%94%84%ED%8A%B8-%EB%AC%B8%EB%B2%95-%EB%A7%88%EC%8A%A4%ED%84%B0-%EC%8A%A4%EC%BF%A8\">앨런 Swift문법 마스터 스쿨 (온라인 BootCamp - 2개월과정)</a></p>\n<h1 id=\"함수\"><a href=\"#함수\" class=\"headerlink\" title=\"함수\"></a>함수</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>입력 ➡️ 함수 ➡️ 출력</p></blockquote>\n<ul>\n<li>프로그래밍에서의 함수: 어떤 기능을 하는 코드의 모음<ul>\n<li><strong>명령어들에 이름을 붙여 묶어둔 것!</strong><ul>\n<li><code>threeAndFour:</code><ul>\n<li><code>MOV (A, B)</code></li>\n<li><code>MOV (C, B)</code></li>\n<li><code>ADD (A, C)</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>func [함수 이름]() &#123; [코드] &#125;</code></li>\n</ul>\n<h2 id=\"함수의-기본-개념\"><a href=\"#함수의-기본-개념\" class=\"headerlink\" title=\"함수의 기본 개념\"></a>함수의 기본 개념</h2><ul>\n<li>함수는 2단계에 걸쳐 실행된다.<ol>\n<li>정의</li>\n<li>호출(실행)</li>\n</ol>\n</li>\n<li>함수는 왜 사용할까?<ul>\n<li>반복되는 동작을 단순화하여 재사용</li>\n<li>논리적 단위로 구분</li>\n<li>길이가 긴 코드를 단순화</li>\n<li>미리 주어진 코드의 기능을 개발자는 사용만 하면 된다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"함수의-형태\"><a href=\"#함수의-형태\" class=\"headerlink\" title=\"함수의 형태\"></a>함수의 형태</h2><h3 id=\"함수에-인풋이-있는-경우\"><a href=\"#함수에-인풋이-있는-경우\" class=\"headerlink\" title=\"함수에 인풋이 있는 경우\"></a>함수에 인풋이 있는 경우</h3><ul>\n<li><strong>인자(parameter)</strong> &#x3D; 매개변수 &#x3D; 인풋(input)<ul>\n<li>함수의 정의에 입력값으로 사용되는 상수</li>\n</ul>\n</li>\n<li><strong>인수(argument)</strong>: 함수의 호출에 사용되는 실제 값</li>\n<li><code>func [함수 이름]([인자]: [인자 타입]) &#123; [코드] &#125;</code></li>\n</ul>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">func saySomething(name: String) &#123;\n\tprint(name)\n&#125;\nsaySomething(name: &quot;Steve&quot;) &#x2F;&#x2F; &quot;Steve&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"함수에-아웃풋이-있는-경우\"><a href=\"#함수에-아웃풋이-있는-경우\" class=\"headerlink\" title=\"함수에 아웃풋이 있는 경우\"></a>함수에 아웃풋이 있는 경우</h3><ul>\n<li>아웃풋 앞에 <code>return</code> 키워드 사용</li>\n<li><code>func [함수 이름]() -&gt; [아웃풋 타입] &#123; [코드] &#125;</code></li>\n</ul>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">func sayYes() -&gt; String &#123;\n\treturn &quot;Yes&quot;\n&#125;\nvar isYes &#x3D; sayYes()\nprint(isYes) &#x2F;&#x2F; &quot;Yes&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"함수에-인풋과-아웃풋-둘-다-있는-경우\"><a href=\"#함수에-인풋과-아웃풋-둘-다-있는-경우\" class=\"headerlink\" title=\"함수에 인풋과 아웃풋 둘 다 있는 경우\"></a>함수에 인풋과 아웃풋 둘 다 있는 경우</h3><ul>\n<li><code>func [함수 이름]([인자]: [인자 타입]) -&gt; [아웃풋 타입] &#123; [코드] &#125;</code></li>\n</ul>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">func sayHello(cnt: Int) -&gt; String &#123;\n\tfor _ in 0..&lt;cnt &#123;\n\t\tprint(&quot;Hello&quot;)\n\t&#125;\n\treturn &quot;Swift&quot;\n&#125;\nprint(sayHello(cnt: 3))\n&#x2F;&#x2F; &quot;Hello&quot; \\n &quot;Hello&quot; \\n &quot;Hello&quot; \\n &quot;Swift&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"Void-Type이란\"><a href=\"#Void-Type이란\" class=\"headerlink\" title=\"Void Type이란?\"></a>Void Type이란?</h4><ul>\n<li>아웃풋이 없는 경우</li>\n</ul>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">func foo() &#123;\n\tprint(&quot;Something&quot;)\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>위 코드는 아래와 같다.</p>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">func foo() -&gt; () &#123;\n\tprint(&quot;Something&quot;)\n&#125;\n\nfunc foo() -&gt; Void &#123;\n\tprint(&quot;Something&quot;)\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>사실은 <code>Void</code> 타입이 생략되어 있는 것.</li>\n</ul>\n<h2 id=\"함수의-파라미터와-아규먼트\"><a href=\"#함수의-파라미터와-아규먼트\" class=\"headerlink\" title=\"함수의 파라미터와 아규먼트\"></a>함수의 파라미터와 아규먼트</h2><h3 id=\"아규먼트-레이블-Argument-Label\"><a href=\"#아규먼트-레이블-Argument-Label\" class=\"headerlink\" title=\"아규먼트 레이블 (Argument Label)\"></a>아규먼트 레이블 (Argument Label)</h3><ul>\n<li>겉에서 볼 때의 파라미터 이름과 안에서 사용할 때의 파라미터 이름을 각각 설정</li>\n</ul>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">func printName(first name: String) &#123;\n\tprint(&quot;나의 이름은 \\(name) 입니다.&quot;)\n&#125;\n&#x2F;&#x2F; 밖에서 볼 때는 &#96;first&#96;, 안에서 사용할 떄는 &#96;name&#96;\n\nprintName(first: &quot;Alex&quot;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"장점\"><a href=\"#장점\" class=\"headerlink\" title=\"장점\"></a>장점</h4><ul>\n<li>함수를 사용할 때 더 명확하게 요구하는 바를 개발자에게 알려줄 수 있다.</li>\n<li><code>func someFunction(yourFirstNumber a: Int) &#123; print(a) &#125;</code><ul>\n<li><code>someFunction(yourFirstNumber: 12)</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"아규먼트-레이블을-생략하는-것도-가능-와일드카드\"><a href=\"#아규먼트-레이블을-생략하는-것도-가능-와일드카드\" class=\"headerlink\" title=\"아규먼트 레이블을 생략하는 것도 가능 (와일드카드)\"></a>아규먼트 레이블을 생략하는 것도 가능 (와일드카드)</h3><pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">func addPrintFunction(_ firstNumber: Int, _ secondNumber: Int) &#123;\n\tprint(firstNumber + secondNumber)\n&#125;\naddPrintFunction(1, 2) &#x2F;&#x2F; 3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"가변-파라미터-Variadic-Parameters\"><a href=\"#가변-파라미터-Variadic-Parameters\" class=\"headerlink\" title=\"가변 파라미터 (Variadic Parameters)\"></a>가변 파라미터 (Variadic Parameters)</h3><ul>\n<li>함수의 파라미터에 정해지지 않은 여러가지 값을 대입<ul>\n<li>하나의 파라미터로 2개 이상의 아규먼트 전달</li>\n<li>아규먼트는 배열의 형태로 전달</li>\n<li>가변 파라미터는 개별 함수마다 하나씩만 선언 가능</li>\n<li>가변 파라미터는 기본값을 가질 수 없다.</li>\n</ul>\n</li>\n<li><code>Type...</code></li>\n</ul>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">func arithmeticAverage(_ numbers: Double...) -&gt; Double &#123;\n\tvar total &#x3D; 0.0\n\tfor number in numbers &#123;\n\t\ttotal +&#x3D; number\n\t&#125;\n\treturn total &#x2F; Double(numbers.count)\n&#125;\n\narithmeticAverage(2.5, 1.5) &#x2F;&#x2F; 2.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"함수의-파라미터에-기본값-default-부여-가능\"><a href=\"#함수의-파라미터에-기본값-default-부여-가능\" class=\"headerlink\" title=\"함수의 파라미터에 기본값(default) 부여 가능\"></a>함수의 파라미터에 기본값(default) 부여 가능</h3><pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">func someFunction(num1: Int, num2: Int &#x3D; 5) -&gt; Int &#123;\n\tvar result &#x3D; num1 + num2\n\treturn result\n&#125;\nprint(someFunction(num1: 3)) &#x2F;&#x2F; 8\nprint(someFunction(num1: 3, num2: 4)) &#x2F;&#x2F; 7<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>애플이 만들어둔 함수에는 기본값이 포함되어 있는 경우가 매우 많다!<ul>\n<li>ex) <code>print()</code>: <code>seperator: &quot;&quot;</code>, <code>terminator: &quot;\\n&quot;</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"함수-사용-시의-주의점\"><a href=\"#함수-사용-시의-주의점\" class=\"headerlink\" title=\"함수 사용 시의 주의점\"></a>함수 사용 시의 주의점</h2><h3 id=\"함수의-파라미터에-대한-정확한-이해\"><a href=\"#함수의-파라미터에-대한-정확한-이해\" class=\"headerlink\" title=\"함수의 파라미터에 대한 정확한 이해\"></a>함수의 파라미터에 대한 정확한 이해</h3><ul>\n<li>함수의 파라미터는 함수 안에서 <strong>상수</strong>이다.</li>\n</ul>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">func someAdd(a: Int) -&gt; Int &#123;\n\ta +&#x3D; 1 &#x2F;&#x2F; Error: &#39;a&#39; is a &#39;let&#39; constant\n\treturn a\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"함수-내의-변수의-Scope-범위\"><a href=\"#함수-내의-변수의-Scope-범위\" class=\"headerlink\" title=\"함수 내의 변수의 Scope(범위)\"></a>함수 내의 변수의 Scope(범위)</h3><ul>\n<li>함수 내에서 선언한 변수의 범위는 해당 함수 안이다.</li>\n</ul>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">func sumOfNum(a: Int) -&gt; Int &#123;\n\tvar sum &#x3D; 0\n\tsum +&#x3D; a\n\treturn sum\n&#125;\nsum +&#x3D; 1 &#x2F;&#x2F; Error: cannot find &#39;sum&#39; in a scope<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"return-키워드의-정확한-이해\"><a href=\"#return-키워드의-정확한-이해\" class=\"headerlink\" title=\"return 키워드의 정확한 이해\"></a><code>return</code> 키워드의 정확한 이해</h3><ul>\n<li>리턴 타입이 있는 함수의 경우<ul>\n<li>리턴 키워드 다음의 표현식을 평가한 후에 그 결과를 리턴하며 함수를 벗어남</li>\n</ul>\n</li>\n<li>리턴 타입이 없는 함수의 경우<ul>\n<li>함수의 실행을 중지하고 함수를 벗어남</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">func numberPrint(n num: Int) &#123;\n\tif num &gt;&#x3D; 5 &#123;\n\t\tprint(&quot;숫자가 5 이상입니다.&quot;)\n\t\treturn\n\t&#125;\n\tprint(&quot;숫자가 5 미만입니다.&quot;)\n&#125;\nnumberPrint(n: 6) &#x2F;&#x2F; &quot;숫자가 5 이상입니다.&quot;\n&#x2F;&#x2F; return이 없다면?\n&#x2F;&#x2F; 함수를 아직 벗어나지 않았기 때문에 뒤에 있는\n&#x2F;&#x2F; &quot;숫자가 5 미만입니다.&quot; 도 출력됨<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"return-타입이-있는-경우-함수의-실행문의-의미\"><a href=\"#return-타입이-있는-경우-함수의-실행문의-의미\" class=\"headerlink\" title=\"return 타입이 있는 경우, 함수의 실행문의 의미\"></a><code>return</code> 타입이 있는 경우, 함수의 실행문의 의미</h3><ul>\n<li><code>return</code> 타입이 있는 함수를 호출하는 경우, 함수를 호출하는 것은 표현식</li>\n</ul>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">func nameString() -&gt; String &#123;\n\treturn &quot;Steve&quot;\n&#125;\nvar yourName: String &#x3D; nameString()\nif nameString() &#x3D;&#x3D; &quot;Steve&quot; &#123;\n\tprint(&quot;이름이 일치합니다.&quot;)\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"중첩-함수-Nested-Function\"><a href=\"#중첩-함수-Nested-Function\" class=\"headerlink\" title=\"중첩 함수 (Nested Function)\"></a>중첩 함수 (Nested Function)</h3><ul>\n<li>함수 안에 함수 정의도 가능</li>\n</ul>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">func chooseStepFunction(backward: Bool, value: Int) -&gt; Int &#123;\n\tfunc stepForward(input: Int) -&gt; Int &#123;\n\t\treturn input + 1\n\t&#125;\n\tfunc stepBackward(input: Int) -&gt; Int &#123;\n\t\treturn input - 1\n\t&#125;\n\n\tif backward &#123;\n\t\treturn stepBackward(input: value)\n\t&#125; else &#123;\n\t\treturn stepForward(input: value)\n\t&#125;\n&#125;\n\nprint(chooseStepFunction(backward: true, value: 3)) &#x2F;&#x2F; 2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","text":"앨런 Swift문법 마스터 스쿨 (온라인 BootCamp - 2개월과정) 함수 입력 ➡️ 함수 ➡️ 출력 프로그래밍에서의 함수: 어떤 기능을 하는 코드의 모음 명령어들에 이름을 붙여 묶어둔 것! threeAndFour: MOV (A, B) MOV (C, ...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"AllenBootCamp","slug":"AllenBootCamp","count":45,"path":"api/categories/AllenBootCamp.json"}],"tags":[{"name":"Swift","slug":"Swift","count":80,"path":"api/tags/Swift.json"},{"name":"iOS","slug":"iOS","count":80,"path":"api/tags/iOS.json"},{"name":"Allen","slug":"Allen","count":45,"path":"api/tags/Allen.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%ED%95%A8%EC%88%98\"><span class=\"toc-text\">함수</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%ED%95%A8%EC%88%98%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EA%B0%9C%EB%85%90\"><span class=\"toc-text\">함수의 기본 개념</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%ED%95%A8%EC%88%98%EC%9D%98-%ED%98%95%ED%83%9C\"><span class=\"toc-text\">함수의 형태</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%ED%95%A8%EC%88%98%EC%97%90-%EC%9D%B8%ED%92%8B%EC%9D%B4-%EC%9E%88%EB%8A%94-%EA%B2%BD%EC%9A%B0\"><span class=\"toc-text\">함수에 인풋이 있는 경우</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%ED%95%A8%EC%88%98%EC%97%90-%EC%95%84%EC%9B%83%ED%92%8B%EC%9D%B4-%EC%9E%88%EB%8A%94-%EA%B2%BD%EC%9A%B0\"><span class=\"toc-text\">함수에 아웃풋이 있는 경우</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%ED%95%A8%EC%88%98%EC%97%90-%EC%9D%B8%ED%92%8B%EA%B3%BC-%EC%95%84%EC%9B%83%ED%92%8B-%EB%91%98-%EB%8B%A4-%EC%9E%88%EB%8A%94-%EA%B2%BD%EC%9A%B0\"><span class=\"toc-text\">함수에 인풋과 아웃풋 둘 다 있는 경우</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Void-Type%EC%9D%B4%EB%9E%80\"><span class=\"toc-text\">Void Type이란?</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%ED%95%A8%EC%88%98%EC%9D%98-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0%EC%99%80-%EC%95%84%EA%B7%9C%EB%A8%BC%ED%8A%B8\"><span class=\"toc-text\">함수의 파라미터와 아규먼트</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%EC%95%84%EA%B7%9C%EB%A8%BC%ED%8A%B8-%EB%A0%88%EC%9D%B4%EB%B8%94-Argument-Label\"><span class=\"toc-text\">아규먼트 레이블 (Argument Label)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EC%9E%A5%EC%A0%90\"><span class=\"toc-text\">장점</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%EC%95%84%EA%B7%9C%EB%A8%BC%ED%8A%B8-%EB%A0%88%EC%9D%B4%EB%B8%94%EC%9D%84-%EC%83%9D%EB%9E%B5%ED%95%98%EB%8A%94-%EA%B2%83%EB%8F%84-%EA%B0%80%EB%8A%A5-%EC%99%80%EC%9D%BC%EB%93%9C%EC%B9%B4%EB%93%9C\"><span class=\"toc-text\">아규먼트 레이블을 생략하는 것도 가능 (와일드카드)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%EA%B0%80%EB%B3%80-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0-Variadic-Parameters\"><span class=\"toc-text\">가변 파라미터 (Variadic Parameters)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%ED%95%A8%EC%88%98%EC%9D%98-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0%EC%97%90-%EA%B8%B0%EB%B3%B8%EA%B0%92-default-%EB%B6%80%EC%97%AC-%EA%B0%80%EB%8A%A5\"><span class=\"toc-text\">함수의 파라미터에 기본값(default) 부여 가능</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%ED%95%A8%EC%88%98-%EC%82%AC%EC%9A%A9-%EC%8B%9C%EC%9D%98-%EC%A3%BC%EC%9D%98%EC%A0%90\"><span class=\"toc-text\">함수 사용 시의 주의점</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%ED%95%A8%EC%88%98%EC%9D%98-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A0%95%ED%99%95%ED%95%9C-%EC%9D%B4%ED%95%B4\"><span class=\"toc-text\">함수의 파라미터에 대한 정확한 이해</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%ED%95%A8%EC%88%98-%EB%82%B4%EC%9D%98-%EB%B3%80%EC%88%98%EC%9D%98-Scope-%EB%B2%94%EC%9C%84\"><span class=\"toc-text\">함수 내의 변수의 Scope(범위)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#return-%ED%82%A4%EC%9B%8C%EB%93%9C%EC%9D%98-%EC%A0%95%ED%99%95%ED%95%9C-%EC%9D%B4%ED%95%B4\"><span class=\"toc-text\">return 키워드의 정확한 이해</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#return-%ED%83%80%EC%9E%85%EC%9D%B4-%EC%9E%88%EB%8A%94-%EA%B2%BD%EC%9A%B0-%ED%95%A8%EC%88%98%EC%9D%98-%EC%8B%A4%ED%96%89%EB%AC%B8%EC%9D%98-%EC%9D%98%EB%AF%B8\"><span class=\"toc-text\">return 타입이 있는 경우, 함수의 실행문의 의미</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%EC%A4%91%EC%B2%A9-%ED%95%A8%EC%88%98-Nested-Function\"><span class=\"toc-text\">중첩 함수 (Nested Function)</span></a></li></ol></li></ol></li></ol>","author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}},"mapped":true,"prev_post":{"title":"9)🧰 Swift - 반복문","uid":"989a634ef691c286f5536c37d3f65d2d","slug":"Allen/2022-09-26-Allen09","date":"2022-09-25T15:00:00.000Z","updated":"2023-03-31T10:32:16.415Z","comments":true,"path":"api/articles/Allen/2022-09-26-Allen09.json","keywords":null,"cover":null,"text":"앨런 Swift문법 마스터 스쿨 (온라인 BootCamp - 2개월과정) 반복문for문 특정 조건을 만족하는 동안 반복 for [item] in [범위 / 컬렉션] &#123; [반복될 코드] &#125; for index in 1...5 &#123;...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"AllenBootCamp","slug":"AllenBootCamp","count":45,"path":"api/categories/AllenBootCamp.json"}],"tags":[{"name":"Swift","slug":"Swift","count":80,"path":"api/tags/Swift.json"},{"name":"iOS","slug":"iOS","count":80,"path":"api/tags/iOS.json"},{"name":"Allen","slug":"Allen","count":45,"path":"api/tags/Allen.json"}],"author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}}},"next_post":{"title":"12)🧰 Swift - 함수.03","uid":"8550bee1cb2a0f386ea1b6c87fe12317","slug":"Allen/2022-09-26-Allen12","date":"2022-09-25T15:00:00.000Z","updated":"2023-03-31T10:32:29.710Z","comments":true,"path":"api/articles/Allen/2022-09-26-Allen12.json","keywords":null,"cover":null,"text":"앨런 Swift문법 마스터 스쿨 (온라인 BootCamp - 2개월과정) 함수함수와 메모리 함수는 특정 메모리 주소에 위치하고, 함수의 내용이 순차적으로 위치한다. (0x01234): threeAndFour 모든 프로그래밍 언어에서 가장 처음 실행되는...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"AllenBootCamp","slug":"AllenBootCamp","count":45,"path":"api/categories/AllenBootCamp.json"}],"tags":[{"name":"Swift","slug":"Swift","count":80,"path":"api/tags/Swift.json"},{"name":"iOS","slug":"iOS","count":80,"path":"api/tags/iOS.json"},{"name":"Allen","slug":"Allen","count":45,"path":"api/tags/Allen.json"}],"author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}}}}