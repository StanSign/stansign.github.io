{"title":"34)🧰 Swift - 중첩 타입 (Nested Types)","uid":"1ed6334be43ee572a89c87ad1476b5f3","slug":"Allen/2022-10-15-Allen34","date":"2022-10-14T15:00:00.000Z","updated":"2023-03-31T10:34:24.190Z","comments":true,"path":"api/articles/Allen/2022-10-15-Allen34.json","keywords":null,"cover":null,"content":"<p><a href=\"https://www.inflearn.com/course/%EC%8A%A4%EC%9C%84%ED%94%84%ED%8A%B8-%EB%AC%B8%EB%B2%95-%EB%A7%88%EC%8A%A4%ED%84%B0-%EC%8A%A4%EC%BF%A8\">앨런 Swift문법 마스터 스쿨 (온라인 BootCamp - 2개월과정)</a></p>\n<h1 id=\"중첩-타입-Nested-Types\"><a href=\"#중첩-타입-Nested-Types\" class=\"headerlink\" title=\"중첩 타입 (Nested Types)\"></a>중첩 타입 (Nested Types)</h1><h2 id=\"왜-사용할까\"><a href=\"#왜-사용할까\" class=\"headerlink\" title=\"왜 사용할까?\"></a>왜 사용할까?</h2><ol>\n<li>특정 타입 안에서만 사용하기 위해<ul>\n<li>내부의 타입은 외부의 타입과 관계가 있고, 외부의 타입 없이는 의미가 없을 수 있다.</li>\n</ul>\n</li>\n<li>타입 간의 연관성을 명확하게 구분하고 내부 구조를 상세하게 설계 가능</li>\n</ol>\n<h2 id=\"예시\"><a href=\"#예시\" class=\"headerlink\" title=\"예시\"></a>예시</h2><pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">struct BlackjackCard &#123;\n\tenum Suit: Character &#123;\n\t\tcase spades &#x3D; &quot;♠️&quot;, hearts &#x3D; &quot;♥️&quot;, diamonds &#x3D; &quot;♦️&quot;, clubs &#x3D; &quot;♣️&quot;\n\t&#125;\n\n\tenum Rank: Int &#123;\n\t\tcase two &#x3D; 2, three, four, five, six, seven, eight, nine, ten\n\t\tcase jack, queen, king, ace\n\n\t\tstruct Values &#123;\n\t\t\tlet first: Int, second: Int?\n\t\t&#125;\n\n\t\tvar values: Values &#123;\n\t\t\tswitch self &#123;\n\t\t\tcase .ace:\n\t\t\t\treturn Values(first: 1, second: 11)\n\t\t\tcase .jack, .queen, .king:\n\t\t\t\treturn Values(first: 10, second: nil)\n\t\t\tdefault:\n\t\t\t\treturn Values(first: self.rawValue, second: nil)\n\t\t\t&#125;\n\t\t&#125;\n\t&#125;\n\n\tlet rank: Rank, suit: Suit &#x2F;&#x2F; 저장 속성\n\n\tvar subtitle: String &#123; &#x2F;&#x2F; 계산 속성\n\t\tvar output &#x3D; &quot;\\(suit.rawValue) 세트,&quot;\n\t\toutput +&#x3D; &quot; 숫자 \\(rank.values.first)&quot;\n\n\t\tif let second &#x3D; rank.values.second &#123;\n\t\t\toutput +&#x3D; &quot; 또는 \\(second)&quot;\n\t\t&#125;\n\n\t\treturn output\n\t&#125;\n&#125;\n\nlet card1 &#x3D; BlackjackCard(rank: .ace, suit: .spades)\nprint(&quot;1번 카드: \\(card1.subtitle)&quot;)\n&#x2F;&#x2F; &quot;1번 카드: ♠️ 세트, 숫자 1 또는 11&quot;\n\nlet card2 &#x3D; BlackjackCard(rank: .five, suit: .diamonds)\nprint(&quot;2번 카드: \\(card2.subtitle)&quot;)\n&#x2F;&#x2F; &quot;2번 카드: ♦️ 세트, 숫자 5&quot;\n\nlet heartsSymbol: Character &#x3D; BlackjackCard.Suit.hearts.rawValue<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"예시2-실제-API\"><a href=\"#예시2-실제-API\" class=\"headerlink\" title=\"예시2 (실제 API)\"></a>예시2 (실제 API)</h2><pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">let formatter &#x3D; DateFormatter()\n\nformatter.dateStyle &#x3D; .full\n&#x2F;&#x2F; formatter.dateStyle &#x3D; DateFormatter.Style.full\n\nlet setting1: DateFormatter.Style &#x3D; DateFormatter.Style.full\nlet setting2: DateFormatter.Style &#x3D; DateFormatter.Style.medium<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"애플은-왜-이렇게-만들었을까\"><a href=\"#애플은-왜-이렇게-만들었을까\" class=\"headerlink\" title=\"애플은 왜 이렇게 만들었을까?\"></a>애플은 왜 이렇게 만들었을까?</h3><pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">enum Style &#123;\n\tcase full\n\tcase long\n\tcase medium\n\tcase none\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>위와 같이 선언했다면 위 열거형이 어떤 타입과 관계가 있는지 명확하지 않다.<br>(<code>DateFormatter</code>인지 <code>UIView</code>인지)</p>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">struct DateFormatters &#123;\n\tvar style: Style\n\n\tenum Style &#123;\n\t\tcase full\n\t\tcase long\n\t\tcase medium\n\t\tcase none\n\t&#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>위와 같이 선언한다면 <code>Style</code> 열거형이 <code>DateFormatters</code>와 연관되어 있다는 것을 확실하게 확인할 수 있다.</p>\n<h2 id=\"자주-사용되는-예시\"><a href=\"#자주-사용되는-예시\" class=\"headerlink\" title=\"자주 사용되는 예시\"></a>자주 사용되는 예시</h2><ul>\n<li>실제 앱에서 “문자열” 모음을 묶어서 사용하는 경우가 많다.<ul>\n<li>실수 방지를 위해서</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">struct K &#123;\n\tstatic let appName &#x3D; &quot;MySuperApp&quot;\n\tstatic let cellIdentifier &#x3D; &quot;ReusableCell&quot;\n\tstatic let cellNibName &#x3D; &quot;MessageCell&quot;\n\tstatic let registerSegue &#x3D; &quot;RegisterToChat&quot;\n\tstatic let loginSegue &#x3D; &quot;LoginToChat&quot;\n\n\tstruct BrandColors &#123;\n\t\tstatic let purple &#x3D; &quot;BrandPurple&quot;\n\t\tstatic let lightPurple &#x3D; &quot;BrandLightPurple&quot;\n\t\tstatic let blue &#x3D; &quot;BrandBlue&quot;\n\t\tstatic let lightBlue &#x3D; &quot;BrandLightBlue&quot;\n\t&#125;\n\n\tstruct FStore &#123;\n\t\tstatic let collectionName &#x3D; &quot;messages&quot;\n\t\tstatic let senderField &#x3D; &quot;sender&quot;\n\t\tstatic let bodyField &#x3D; &quot;body&quot;\n\t\tstatic let dateField &#x3D; &quot;date&quot;\n\t&#125;\n&#125;\n\nlet app &#x3D; K.appName\nlet color &#x3D; K.BrandColors.blue<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">class Message &#123;\n\tprivate enum Status &#123;\n\t\tcase sent\n\t\tcase received\n\t\tcase read\n\t&#125;\n\n\tlet sender: String, recipient: String, content: String\n\tlet timeStamp: Date\n\n\tprivate var status &#x3D; Message.Status.sent\n\n\tinit(sender: String, recipient: String, content: String) &#123;\n\t\tself.sender &#x3D; sender\n\t\tself.recipient &#x3D; recipient\n\t\tself.content &#x3D; content\n\n\t\tself.timeStampe &#x3D; Date()\n\t&#125;\n\n\tfunc getBasicInfo() -&gt; String &#123;\n\t\treturn &quot;보낸사람: \\(sender), 받는사람: \\(recipient), 메세지 내용: \\(content), 보낸 시간: \\(timeStamp.subtitle)&quot;\n\t&#125; \n\n\tfunc statusColor() -&gt; UIColor &#123;\n\t\tswitch status &#123;\n\t\tcase .sent:\n\t\t\treturn UIColor(red: 1, green: 0, blue: 0, alpha: 1)\n\t\tcase .received:\n\t\t\treturn UIColor(red: 0, green: 0, blue: 1, alpha: 1)\n\t\tcase .read:\n\t\t\treturn UIColor(red: 0, green: 1, blue: 1, alpha: 1)\n\t\t&#125;\n\t&#125;\n&#125;\n\nlet message1 &#x3D; Message(sender: &quot;홍길동&quot;, recipient: &quot;임꺽정&quot;, content: &quot;뭐해?&quot;)\nprint(message1.getBasicInfo())<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","text":"앨런 Swift문법 마스터 스쿨 (온라인 BootCamp - 2개월과정) 중첩 타입 (Nested Types)왜 사용할까? 특정 타입 안에서만 사용하기 위해 내부의 타입은 외부의 타입과 관계가 있고, 외부의 타입 없이는 의미가 없을 수 있다. 타입 간...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"AllenBootCamp","slug":"AllenBootCamp","count":45,"path":"api/categories/AllenBootCamp.json"}],"tags":[{"name":"Swift","slug":"Swift","count":75,"path":"api/tags/Swift.json"},{"name":"iOS","slug":"iOS","count":75,"path":"api/tags/iOS.json"},{"name":"Allen","slug":"Allen","count":45,"path":"api/tags/Allen.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%EC%A4%91%EC%B2%A9-%ED%83%80%EC%9E%85-Nested-Types\"><span class=\"toc-text\">중첩 타입 (Nested Types)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%EC%99%9C-%EC%82%AC%EC%9A%A9%ED%95%A0%EA%B9%8C\"><span class=\"toc-text\">왜 사용할까?</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%EC%98%88%EC%8B%9C\"><span class=\"toc-text\">예시</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%EC%98%88%EC%8B%9C2-%EC%8B%A4%EC%A0%9C-API\"><span class=\"toc-text\">예시2 (실제 API)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%EC%95%A0%ED%94%8C%EC%9D%80-%EC%99%9C-%EC%9D%B4%EB%A0%87%EA%B2%8C-%EB%A7%8C%EB%93%A4%EC%97%88%EC%9D%84%EA%B9%8C\"><span class=\"toc-text\">애플은 왜 이렇게 만들었을까?</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%EC%9E%90%EC%A3%BC-%EC%82%AC%EC%9A%A9%EB%90%98%EB%8A%94-%EC%98%88%EC%8B%9C\"><span class=\"toc-text\">자주 사용되는 예시</span></a></li></ol></li></ol>","author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}},"mapped":true,"prev_post":{"title":"13)🍎 Swift - ScrollView 오토 레이아웃으로 구현하기","uid":"28d16104e44090134cb96751618130c4","slug":"Swift/2022-10-21-Swift13","date":"2022-10-20T15:00:00.000Z","updated":"2023-03-31T10:42:31.441Z","comments":true,"path":"api/articles/Swift/2022-10-21-Swift13.json","keywords":null,"cover":[],"text":"UIScrollView는 스토리보드에서 사용할 때마다 에러를 내는 UI 컴포넌트 중 대표적인 친구입니다.하지만 언제나처럼 컴퓨터는 잘못이 없죠.제대로 알고 사용하지 못해서 일어나는 장애물이라고 생각하고 머리를 정리할 겸 단계별로 알아보겠습니다. UIS...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"Swift","slug":"Swift","count":27,"path":"api/categories/Swift.json"}],"tags":[{"name":"Swift","slug":"Swift","count":75,"path":"api/tags/Swift.json"},{"name":"iOS","slug":"iOS","count":75,"path":"api/tags/iOS.json"}],"author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}}},"next_post":{"title":"33)🧰 Swift - 메서드 디스패치 (Method Dispatch)","uid":"69f8880ec5c4a5498a069d7bb5807eb6","slug":"Allen/2022-10-14-Allen33","date":"2022-10-13T15:00:00.000Z","updated":"2023-03-31T10:34:18.824Z","comments":true,"path":"api/articles/Allen/2022-10-14-Allen33.json","keywords":null,"cover":null,"text":"앨런 Swift문법 마스터 스쿨 (온라인 BootCamp - 2개월과정) Method Dispatch코드 영역에 저장된 함수&#x2F;메서드를 실행시키려면 그 주소를 알아야합니다.이 메서드를 실행시키는 방법에는 크게 3가지 방법이 있습니다. Swift...","link":"","photos":[],"count_time":{"symbolsCount":679,"symbolsTime":"1 mins."},"categories":[{"name":"AllenBootCamp","slug":"AllenBootCamp","count":45,"path":"api/categories/AllenBootCamp.json"}],"tags":[{"name":"Swift","slug":"Swift","count":75,"path":"api/tags/Swift.json"},{"name":"iOS","slug":"iOS","count":75,"path":"api/tags/iOS.json"},{"name":"Allen","slug":"Allen","count":45,"path":"api/tags/Allen.json"}],"author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}}}}