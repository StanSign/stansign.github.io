{"title":"4)📱iOS앱개발 - API Gateway, Lambda 사용하기","uid":"6fb7b20ef7439001e04bd4ee42c09224","slug":"Assemble/220111_04/2022-01-11-assemble04","date":"2022-01-10T15:00:00.000Z","updated":"2023-03-31T10:37:48.506Z","comments":true,"path":"api/articles/Assemble/220111_04/2022-01-11-assemble04.json","keywords":null,"cover":[],"content":"<h3 id=\"사용할-AWS-서비스들\"><a href=\"#사용할-AWS-서비스들\" class=\"headerlink\" title=\"사용할 AWS 서비스들\"></a>사용할 AWS 서비스들</h3><p>우선.. 안그래도 처음 다뤄보는 AWS인데 사용하는 서비스들이 너무 많게 느껴집니다.. 하지만 모바일 어플리케이션에서는 API의 형태로 DB에 접근하는 것이 좋다고 해서 이런 방식으로 진행해보고자 합니다. 진행 과정에서 많은 오류가 발생할 것 같아 일단 해보고 나중에 수정하는 방식으로 진행해보겠습니다.</p>\n<p>저의 최종 목적은 생성한 RDS에 API Gateway를 이용하여 REST API의 형태로 데이터를 생성&#x2F;조회&#x2F;수정&#x2F;삭제하는 것입니다. 이 때, 데이터를 건드리는 작업들을 하기 위해 필요한 “함수”들을 Lambda를 통해 구현합니다. 요약하면 다음 세 가지 서비스가 이번 포스트를 위해 사용할 서비스들입니다.</p>\n<ol>\n<li>RDS</li>\n<li>API Gateway</li>\n<li>Lambda</li>\n</ol>\n<h4 id=\"Amazon-API-Gateway란\"><a href=\"#Amazon-API-Gateway란\" class=\"headerlink\" title=\"Amazon API Gateway란?\"></a>Amazon API Gateway란?</h4><p>우선 API Gateway부터 살펴봅시다. API Gateway는 AWS 클라우드에 저장된 모든 데어터에 HTTP 요청으로 액세스하는 REST &#x2F; Websocket API를 생성할 수 있게 하는 서비스입니다. 이렇게 만들어진 API를 호출하기 위한 Swift 언어용 SDK도 준비되어 있기 때문에 API를 생성할 수만 있다면 간편하게 이용할 수 있을 것 같습니다.</p>\n<img src=\"https://github.com/StanSign/StanSign.github.io/blob/main/_posts/Assemble/220111_04/Product-Page-Diagram_Amazon-API-Gateway-How-Works.png?raw=true\" alt=\"API Gateway\" width=\"550\">\n\n<h4 id=\"Amazon-Lambda란\"><a href=\"#Amazon-Lambda란\" class=\"headerlink\" title=\"Amazon Lambda란?\"></a>Amazon Lambda란?</h4><p>다음으로 Lambda입니다. Lambda는 서버에 대한 걱정 없이 (내 소유의 서버 없이, Serverless) 개발자가 작성한 코드를 실행시켜주는 서비스입니다. AWS의 다른 서비스들과의 확장성이 뛰어나 여러방면에서 사용할 수 있습니다. 저는 사용자의 GET 명령이 있을 때마다 Lambda 서비스를 통해 코드를 실행시켜 db에서 데이터를 가져오게 할 예정입니다.</p>\n<h3 id=\"API를-만들어보자\"><a href=\"#API를-만들어보자\" class=\"headerlink\" title=\"API를 만들어보자.\"></a>API를 만들어보자.</h3><p><strong>1. AWS Console에서 [Amazon API Gateway &gt; REST API 구축]을 통해 API를 생성해줍니다. 여기서 엔드포인트 유형은 지역으로 설정해줍니다.</strong></p>\n<ul>\n<li>지역: 현재 지역에만 배포</li>\n<li>최적화된 에지: CloudFront(AWS) 네트워크에 배포</li>\n<li>프라이빗: VPC에서만 액세스 가능<img src=\"https://github.com/StanSign/StanSign.github.io/blob/main/_posts/Assemble/220111_04/cap01.png?raw=true\" alt=\"Create new API\" width=\"550\">\n**2. [리소스 > 작업]에서 리소스 생성을 눌러 리소스 이름/경로를 설정하고 생성합니다.**\n<img src=\"https://github.com/StanSign/StanSign.github.io/blob/main/_posts/Assemble/220111_04/cap02.png?raw=true\" alt=\"Create Resource\" width=\"550\">\n<img src=\"https://github.com/StanSign/StanSign.github.io/blob/main/_posts/Assemble/220111_04/cap03.png?raw=true\" alt=\"Create Resource2\" width=\"550\">\n생성한 리소스의 하위 리소스를 계속해서 만들 수 있습니다. /films 주소 뒤에 /{fID} 리소스를 생성하였습니다. {}가 포함된 경로는 파라미터를 가질 수 있습니다.\n<img src=\"https://github.com/StanSign/StanSign.github.io/blob/main/_posts/Assemble/220111_04/cap04.png?raw=true\" alt=\"Resource with Paramter\" width=\"550\">\n**3. AWS Console에서 [Lambda > 함수 > 함수 생성]을 통해 함수를 새로 생성합니다.**\n<img src=\"https://github.com/StanSign/StanSign.github.io/blob/main/_posts/Assemble/220111_04/cap05.png?raw=true\" alt=\"Lambda\" width=\"550\">\n생성된 Lambda 함수를 보면 기본으로 \"Hello from lambda!\"라는 메시지를 출력하는 함수가 입력되어 있습니다.\n<img src=\"https://github.com/StanSign/StanSign.github.io/blob/main/_posts/Assemble/220111_04/cap06.png?raw=true\" alt=\"Hello from lambda\" width=\"550\">\n**4. 다시 API Gateway로 돌아가 이번에는 메서드를 생성합니다.**\n<img src=\"https://github.com/StanSign/StanSign.github.io/blob/main/_posts/Assemble/220111_04/cap07.png?raw=true\" alt=\"Create Method\" width=\"550\">\nDB의 내용을 조회하는 요청이기 때문에 GET 메서드를 생성해야 합니다.\n<img src=\"https://github.com/StanSign/StanSign.github.io/blob/main/_posts/Assemble/220111_04/cap08.png?raw=true\" alt=\"Select GET\" width=\"550\">\n메서드의 통합 유형을 Lambda 함수, 리전은 현재 위치 (서울), 함수에는 이전에 생성한 함수의 이름을 적고 저장해줍니다.\n<img src=\"https://github.com/StanSign/StanSign.github.io/blob/main/_posts/Assemble/220111_04/cap09.png?raw=true\" alt=\"Setting Method\" widht=\"550\">\n메서드가 저장되면 메서드의 실행 단계를 한 눈에 볼 수 있으며, \"테스트\" 버튼을 통해 메서드가 제대로 동작하는지 확인해볼 수 있습니다.\n<img src=\"https://github.com/StanSign/StanSign.github.io/blob/main/_posts/Assemble/220111_04/cap10.png?raw=true\" alt=\"Method Steps\" width=\"550\">\n<img src=\"https://github.com/StanSign/StanSign.github.io/blob/main/_posts/Assemble/220111_04/cap11.png?raw=true\" alt=\"Test Screen\" width=\"550\"></li>\n</ul>\n","text":"사용할 AWS 서비스들우선.. 안그래도 처음 다뤄보는 AWS인데 사용하는 서비스들이 너무 많게 느껴집니다.. 하지만 모바일 어플리케이션에서는 API의 형태로 DB에 접근하는 것이 좋다고 해서 이런 방식으로 진행해보고자 합니다. 진행 과정에서 많은 오류...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"Assemble","slug":"Assemble","count":9,"path":"api/categories/Assemble.json"}],"tags":[{"name":"Assemble","slug":"Assemble","count":9,"path":"api/tags/Assemble.json"},{"name":"AWS","slug":"AWS","count":5,"path":"api/tags/AWS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%EC%82%AC%EC%9A%A9%ED%95%A0-AWS-%EC%84%9C%EB%B9%84%EC%8A%A4%EB%93%A4\"><span class=\"toc-text\">사용할 AWS 서비스들</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Amazon-API-Gateway%EB%9E%80\"><span class=\"toc-text\">Amazon API Gateway란?</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Amazon-Lambda%EB%9E%80\"><span class=\"toc-text\">Amazon Lambda란?</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#API%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EC%9E%90\"><span class=\"toc-text\">API를 만들어보자.</span></a></li></ol>","author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"fab fa-instagram","link":"https://www.instagram.com/nomatter_jun/"}}}},"mapped":true,"prev_post":{"title":"5)📱iOS앱개발 - Lambda 함수 생성 & API 배포하기","uid":"3dd5dd23bc1bf752e32b431e49dca7c1","slug":"Assemble/220112_05/2022-01-12-assemble05","date":"2022-01-11T15:00:00.000Z","updated":"2023-03-31T10:38:04.381Z","comments":true,"path":"api/articles/Assemble/220112_05/2022-01-12-assemble05.json","keywords":null,"cover":[],"text":"함수를 테스트할 로컬 환경 만들기완성된 함수를 아마존 서버에 올리고 싶어서 로컬에서 먼저 테스트하기 위한 환경을 만들어주겠습니다. 파이썬을 사용해서 MySQL에 접근해야하기 때문에 먼저 PyMySQL이라는 라이브러리를 설치해야 합니다. 아래 명령어로 ...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"Assemble","slug":"Assemble","count":9,"path":"api/categories/Assemble.json"}],"tags":[{"name":"Python","slug":"Python","count":6,"path":"api/tags/Python.json"},{"name":"Assemble","slug":"Assemble","count":9,"path":"api/tags/Assemble.json"},{"name":"AWS","slug":"AWS","count":5,"path":"api/tags/AWS.json"},{"name":"mySQL","slug":"mySQL","count":4,"path":"api/tags/mySQL.json"}],"author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"fab fa-instagram","link":"https://www.instagram.com/nomatter_jun/"}}}}},"next_post":{"title":"3)📱iOS앱개발 - DB 설계하기","uid":"b06e01c571f7d6e2c0ed7687c5f5f482","slug":"Assemble/220110_03/2022-01-10-assemble03","date":"2022-01-09T15:00:00.000Z","updated":"2023-03-31T10:37:26.054Z","comments":true,"path":"api/articles/Assemble/220110_03/2022-01-10-assemble03.json","keywords":null,"cover":[],"text":"ERD 작성하기나름 학기중에 DB 과목을 배웠으니 설계 단계부터 제대로 해보기로 했습니다. 이전 프로젝트 때는 DB 개념을 제대로 몰랐기 때문에 막무가내로 DB를 구현했었는데 덕분에 엔티티나 속성을 새로 추가하거나 수정할 때마다 곤욕을 치뤘습니다.우선...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"Assemble","slug":"Assemble","count":9,"path":"api/categories/Assemble.json"}],"tags":[{"name":"Assemble","slug":"Assemble","count":9,"path":"api/tags/Assemble.json"},{"name":"AWS","slug":"AWS","count":5,"path":"api/tags/AWS.json"},{"name":"mySQL","slug":"mySQL","count":4,"path":"api/tags/mySQL.json"}],"author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"fab fa-instagram","link":"https://www.instagram.com/nomatter_jun/"}}}}}}