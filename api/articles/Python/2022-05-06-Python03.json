{"title":"3)📘 Python - Covariance & Contravariance","uid":"c4627b4e684e76e57427d504523ee0e8","slug":"Python/2022-05-06-Python03","date":"2022-05-05T15:00:00.000Z","updated":"2023-03-31T10:40:01.620Z","comments":true,"path":"api/articles/Python/2022-05-06-Python03.json","keywords":null,"cover":null,"content":"<h1 id=\"Covariance-amp-Contravariance\"><a href=\"#Covariance-amp-Contravariance\" class=\"headerlink\" title=\"Covariance &amp; Contravariance\"></a>Covariance &amp; Contravariance</h1><p>파이썬의 경우를 살펴보기 전에, Covariance와 Contravariance가 무엇인지 알아보기 위해 정적 프로그래밍 언어의 경우를 살펴보겠습니다.</p>\n<p>예를 들어, 상위타입 <code>Animal</code>과 서브타입 <code>Cat</code>이 있다고 생각해볼게요. 정적 프로그래밍 언어에서 Cat 타입은 <code>Animal</code> 타입의 표현식들을 아마도 사용할 수 있을 것입니다. 왜 “아마도”라는 애매한 말을 붙였냐면, “상위타입과 서브타입에서 서로의 표현식들을 사용할 수 있는가?”는 해당 언어의 Covariance와 Contravariance 속성에 따라 달라지기 때문이죠!</p>\n<h2 id=\"Covariance-amp-Contravariance-1\"><a href=\"#Covariance-amp-Contravariance-1\" class=\"headerlink\" title=\"Covariance &amp; Contravariance\"></a>Covariance &amp; Contravariance</h2><h3 id=\"Covariance\"><a href=\"#Covariance\" class=\"headerlink\" title=\"Covariance\"></a>Covariance</h3><ul>\n<li>T’가 T의 서브 타입이라면, C&lt;T’&gt;는 C<T>의 서브타입이다.</li>\n</ul>\n<p><strong>Covariance</strong> 속성을 가질 경우, 예시로 들었던 서브타입 <code>Cat</code>은 상위타입 <code>Animal</code>보다 더 작고 세분화된 타입의 표현식들을 사용할 수 있습니다. </p>\n<p>이 경우에는 이해하기가 비교적 쉽습니다. 일반적인 Polymorphism의 특성과 동일하기 때문이죠. 하위 클래스는 상위 클래스의 특성들을 상속받아 사용할 수 있습니다!</p>\n<h3 id=\"Contravariance\"><a href=\"#Contravariance\" class=\"headerlink\" title=\"Contravariance\"></a>Contravariance</h3><ul>\n<li>T’가 T의 서브 타입이면, C<T>는 C&lt;T’&gt;의 서브타입이다.</li>\n</ul>\n<p>반대로 <strong>Contravariance</strong> 속성을 가질 경우에는 상위타입 <code>Animal</code>이 서브타입 <code>Cat</code>의 세분화된 표현식들을 사용할 수 있게 됩니다.</p>\n<h3 id=\"Invariance\"><a href=\"#Invariance\" class=\"headerlink\" title=\"Invariance\"></a>Invariance</h3><p>이 두 속성 외에도 <strong>Invariance</strong>라는 속성도 있습니다. 이 경우에는 서로의 표현식을 양 쪽 모두 사용할 수 없습니다.</p>\n<h2 id=\"Python의-Covariance-amp-Contravariance\"><a href=\"#Python의-Covariance-amp-Contravariance\" class=\"headerlink\" title=\"Python의 Covariance &amp; Contravariance\"></a>Python의 Covariance &amp; Contravariance</h2><p>이제 이 개념을 파이썬의 예시에 적용시켜보겠습니다. 상위 클래스 <code>Animal</code>과 하위 클래스 <code>Cat</code> 이 있다고 생각해봅시다. 그리고 <code>withList[Animal]</code>이라는 <code>Cat</code> 클래스를 인자로 받는 함수가 있다고 해볼게요. 이 함수의 인자에 <code>Cat</code>을 사용할 수 있을까요? <code>withList[Cat]</code>과 같이 말이죠.</p>\n<p>보통의 경우 이런 사항은 Covariance하게 처리됩니다. “사용할 수 있다”는 쪽인 것이죠. 하지만 확신할 수 없습니다. 실제로는 Contravariance하게 동작하고 있을 수도 있는 것이죠. 타입 체커나 컴파일러에 따라 다르다는 것입니다.</p>\n<p>파이썬에서는 이 문제를 해결하기 위해 <code>convariant = True</code>나 <code>contravariant = True</code>와 같이 직관적이고 간단한 인자를 하나 추가해줄 수 있습니다. 그리고 이러한 옵션을 줄 경우에는, 변수의 뒤에 <code>_co</code>, <code>_contra</code>를 붙여주는 것이 표기적으로 좋습니다.</p>\n<p>예시를 통해 한번 볼게요.</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> TypeVar<span class=\"token punctuation\">,</span> Generic<span class=\"token punctuation\">,</span> Iterable<span class=\"token punctuation\">,</span> Iterator\n\nList_co <span class=\"token operator\">=</span> TypeVar<span class=\"token punctuation\">(</span><span class=\"token string\">'List_co'</span><span class=\"token punctuation\">,</span> covariant <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ImmutableList</span><span class=\"token punctuation\">(</span>Generic<span class=\"token punctuation\">[</span>List_co<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  \n  <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> items<span class=\"token punctuation\">:</span> Iterable<span class=\"token punctuation\">[</span>List_co<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n   \n  <span class=\"token keyword\">def</span> <span class=\"token function\">__iter__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Iterator<span class=\"token punctuation\">[</span>List_co<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    \n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  \n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Cat</span><span class=\"token punctuation\">(</span>Animal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>Iterable 타입을 모두 받는 List_co 타입을 covariant 속성을 준 상태로 만들어 준 코드입니다. 그리고 상위 클래스 <code>Animal</code>과 서브 클래스 <code>Cat</code>도 있네요.</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">list_animals</span><span class=\"token punctuation\">(</span>animals<span class=\"token punctuation\">:</span> ImmutableList<span class=\"token punctuation\">[</span>Animal<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">for</span> animal <span class=\"token keyword\">in</span> animals<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>animal<span class=\"token punctuation\">)</span>\n    \ncats <span class=\"token operator\">=</span> ImmutableList<span class=\"token punctuation\">[</span>Cat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\nlist_animals<span class=\"token punctuation\">(</span>cats<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>ImmutableList[Animal]</code>을 인자로 갖는 list_animals 함수를 만들어주고 <code>ImmutableList[Cat()]</code>을 인자로 넣어보았습니다. covariant 속성을 <code>true</code>로 주었기 떄문에 아무 문제 없이 동작합니다. </p>\n","text":"Covariance &amp; Contravariance파이썬의 경우를 살펴보기 전에, Covariance와 Contravariance가 무엇인지 알아보기 위해 정적 프로그래밍 언어의 경우를 살펴보겠습니다. 예를 들어, 상위타입 Animal과 서브타입...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"python","slug":"python","count":4,"path":"api/categories/python.json"}],"tags":[{"name":"Python","slug":"Python","count":6,"path":"api/tags/Python.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Covariance-amp-Contravariance\"><span class=\"toc-text\">Covariance &amp; Contravariance</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Covariance-amp-Contravariance-1\"><span class=\"toc-text\">Covariance &amp; Contravariance</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Covariance\"><span class=\"toc-text\">Covariance</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Contravariance\"><span class=\"toc-text\">Contravariance</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Invariance\"><span class=\"toc-text\">Invariance</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Python%EC%9D%98-Covariance-amp-Contravariance\"><span class=\"toc-text\">Python의 Covariance &amp; Contravariance</span></a></li></ol></li></ol>","author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 목적 있는 성장을 지향하는 <br/> iOS 개발자 준비생 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}},"mapped":true,"prev_post":{"title":"4)📘 Python - Context Manager","uid":"880e35cd89b3cfce92587e2ccc115063","slug":"Python/2022-07-16-Python04","date":"2022-07-15T15:00:00.000Z","updated":"2023-03-31T10:40:14.501Z","comments":true,"path":"api/articles/Python/2022-07-16-Python04.json","keywords":null,"cover":null,"text":"contextManagerContext Manager는 많은 코드 시간과 리소스 중에 정확히 원하는 시간과 리소스를 사용할 수 있도록 도와주는 기능입니다. 우리가 무심결에도 사용하던 with문 또한 Context Manager 중의 하나입니다. 이 w...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"python","slug":"python","count":4,"path":"api/categories/python.json"}],"tags":[{"name":"Python","slug":"Python","count":6,"path":"api/tags/Python.json"},{"name":"Context Manager","slug":"Context-Manager","count":1,"path":"api/tags/Context-Manager.json"}],"author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 목적 있는 성장을 지향하는 <br/> iOS 개발자 준비생 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}}},"next_post":{"title":"2)📘 Python - typing","uid":"e585a8a76173e8bfa9151f74e32ccb79","slug":"Python/2022-05-05-Python02","date":"2022-05-04T15:00:00.000Z","updated":"2023-03-31T10:39:54.901Z","comments":true,"path":"api/articles/Python/2022-05-05-Python02.json","keywords":null,"cover":null,"text":"TypingTyping 모듈은 파이썬에서 지원하는 타입 힌팅(Type Hinting) 모듈입니다. Type Checking도 아니고 Hinting이라니, 참 요상하죠..? 파이썬이 이런 모듈을 지원하는 것은 파이썬의 독특한 특징이 그 이유입니다. 왜 ...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"python","slug":"python","count":4,"path":"api/categories/python.json"}],"tags":[{"name":"Python","slug":"Python","count":6,"path":"api/tags/Python.json"},{"name":"typing","slug":"typing","count":1,"path":"api/tags/typing.json"}],"author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 목적 있는 성장을 지향하는 <br/> iOS 개발자 준비생 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}}}}