{"title":"2)📘 Python - typing","uid":"e585a8a76173e8bfa9151f74e32ccb79","slug":"Python/2022-05-05-Python02","date":"2022-05-04T15:00:00.000Z","updated":"2023-03-31T10:39:54.901Z","comments":true,"path":"api/articles/Python/2022-05-05-Python02.json","keywords":null,"cover":null,"content":"<h1 id=\"Typing\"><a href=\"#Typing\" class=\"headerlink\" title=\"Typing\"></a>Typing</h1><p>Typing 모듈은 파이썬에서 지원하는 타입 힌팅(Type Hinting) 모듈입니다. Type Checking도 아니고 Hinting이라니, 참 요상하죠..? 파이썬이 이런 모듈을 지원하는 것은 파이썬의 독특한 특징이 그 이유입니다.</p>\n<h2 id=\"왜-Typing-모듈이-필요할까\"><a href=\"#왜-Typing-모듈이-필요할까\" class=\"headerlink\" title=\"왜 Typing 모듈이 필요할까?\"></a>왜 Typing 모듈이 필요할까?</h2><p>파이썬은 동적 프로그래밍 언어입니다. 동적 프로그래밍 언어는 컴파일 타임에  타입을 정하는 것이 아니라, 프로그램 실행 중에 타입이 결정됩니다. 그런데 파이썬은 여기서 더 나아가서 실행 중에도 오브젝트(변수)의 타입을 자유롭게 변경할 수 있습니다. </p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token comment\"># int</span>\na <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span>\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token comment\"># str</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>이렇게 파이썬은 타입에 대해 굉장히 유한 것을 볼 수 있습니다. 이런 파이썬의 특징 덕분에 파이썬을 이용하여 코드를 짤 때 프로그래머는 에러를 훨씬 덜 보게 되고 빠른 개발이 가능해집니다. 하지만 이런 자유로움은 당연히 코드가 길어지고 프로젝트가 커질 수록 버그를 일으킬 확률을 높이는 주범이 됩니다.</p>\n<p>그래서 파이썬은 Typing 모듈을 사용하기로 하였습니다. Typing 모듈은 타입을 검사(체킹)하는 것이 아니라 개발자가 코드를 읽기 편하고 PyLint와 같은 도구가 활용할 수 있도록 객체들에 정보를 추가해주는 모듈입니다.</p>\n<h2 id=\"어떻게-쓰죠\"><a href=\"#어떻게-쓰죠\" class=\"headerlink\" title=\"어떻게 쓰죠?\"></a>어떻게 쓰죠?</h2><p>기본적인 변수형에 사용하기 위해서는 <code>변수이름: 타입</code>과 같이 사용할 수 있습니다.</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">num<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\nstring<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World\"</span>\nletters<span class=\"token punctuation\">:</span> <span class=\"token builtin\">list</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">]</span>\nstudent<span class=\"token punctuation\">:</span> <span class=\"token builtin\">dict</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Chris\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"phone\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"01012345678\"</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>함수에도 <code>def 함수이름(필수인자: 타입, 선택인자: 타입 =  기본값) -&gt; 반환타입:</code> 과 같이 사용할 수 있습니다.</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> arg_optional<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">\"B\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<p>이렇게 보니 사용법은 Swift의 기본 문법과 똑같네요.. 사용하는데 어려움은 없을 것 같습니다.</p>\n<h2 id=\"어떤-타입들이-있나요\"><a href=\"#어떤-타입들이-있나요\" class=\"headerlink\" title=\"어떤 타입들이 있나요?\"></a>어떤 타입들이 있나요?</h2><p>유용하게 사용할 수 있는 타입들과 사용 예시를 간단하게 쭉 살펴보겠습니다.</p>\n<h3 id=\"내장-자료-구조\"><a href=\"#내장-자료-구조\" class=\"headerlink\" title=\"내장 자료 구조\"></a>내장 자료 구조</h3><h4 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> List\nletters<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"Dict\"><a href=\"#Dict\" class=\"headerlink\" title=\"Dict\"></a>Dict</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Dict\nTimeZone<span class=\"token punctuation\">:</span> Dict<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token string\">\"KR\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"South Korea\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"CN\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"China\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"US\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"United States\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"JP\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Japan\"</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"Tuple\"><a href=\"#Tuple\" class=\"headerlink\" title=\"Tuple\"></a>Tuple</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Tuple\nstudent<span class=\"token punctuation\">:</span> Tuple<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Chris\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"Set\"><a href=\"#Set\" class=\"headerlink\" title=\"Set\"></a>Set</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Set\nletters<span class=\"token punctuation\">:</span> Set<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"Final\"><a href=\"#Final\" class=\"headerlink\" title=\"Final\"></a>Final</h3><p>Final은 더이상 값의 변경이 없는 경우 사용하면 편리합니다.</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Final\nDEFAULT_TIMEOUT_SECONDS<span class=\"token punctuation\">:</span> Final<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"Union\"><a href=\"#Union\" class=\"headerlink\" title=\"Union\"></a>Union</h3><p>하나의 객체에 여러 타입의 값을 할당하고 싶을 떄 사용하면 편리합니다.</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Union\n<span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">:</span> Union<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">return</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"Optional\"><a href=\"#Optional\" class=\"headerlink\" title=\"Optional\"></a>Optional</h3><p>Swift의 optional과 동일합니다. nil 값을 가질 수 있습니다. 다만 ? 대신 Optional[]로 표기하고 nil이 아니라 None을 사용합니다.</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">:</span> Optional<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> params<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n  <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"Callable\"><a href=\"#Callable\" class=\"headerlink\" title=\"Callable\"></a>Callable</h3><p>Callable은 함수입니다. 함수를 변수에 저장하거나 인자로 사용할 때, 혹은 반환값으로 사용할 때 Callable 타입을 사용하면 편하게 사용할 수 있습니다.</p>\n<p>형식은 <code>함수이름: Callable[[인자타입, 인자타입, ...], 반환타입]</code>과 같이 사용할 수 있습니다.</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Callable\n<span class=\"token keyword\">def</span> <span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span>greet<span class=\"token punctuation\">:</span> Callable<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> times<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>times<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>greet<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> greet<span class=\"token punctuation\">:</span> Callable<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> name<span class=\"token punctuation\">:</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"Hi, </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">!\"</span></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> repeat<span class=\"token punctuation\">(</span>greet<span class=\"token punctuation\">,</span> <span class=\"token string\">\"John\"</span><span class=\"token punctuation\">)</span>\nHi<span class=\"token punctuation\">,</span> John!\nHi<span class=\"token punctuation\">,</span> John!<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"타입-추상화-duck-type\"><a href=\"#타입-추상화-duck-type\" class=\"headerlink\" title=\"타입 추상화 (duck-type)\"></a>타입 추상화 (duck-type)</h3><h4 id=\"Iterable\"><a href=\"#Iterable\" class=\"headerlink\" title=\"Iterable\"></a>Iterable</h4><p>모든 iterable들에 적용할 수 있습니다. </p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Iterable\n<span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>ints<span class=\"token punctuation\">:</span> Iterable<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> ints<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<h4 id=\"Mapping\"><a href=\"#Mapping\" class=\"headerlink\" title=\"Mapping\"></a>Mapping</h4><p>Dict 형 Iterable입니다.</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Mapping\n<span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>my_mapping<span class=\"token punctuation\">:</span> Mapping<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n  my_mapping<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"maybe\"</span>\n  <span class=\"token keyword\">return</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>my_mapping<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'yes'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'no'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'yes'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'no'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'maybe'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<h4 id=\"Mutable-Mapping\"><a href=\"#Mutable-Mapping\" class=\"headerlink\" title=\"Mutable Mapping\"></a>Mutable Mapping</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> MutableMapping\n<span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>my_mapping<span class=\"token punctuation\">:</span> MutableMapping<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n  my_mapping<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"maybe\"</span>\n  <span class=\"token keyword\">return</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>my_mapping<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'yes'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'no'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'yes'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'no'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'maybe'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"제네릭-타입\"><a href=\"#제네릭-타입\" class=\"headerlink\" title=\"제네릭 타입\"></a>제네릭 타입</h3><h4 id=\"TypeVar\"><a href=\"#TypeVar\" class=\"headerlink\" title=\"TypeVar\"></a>TypeVar</h4><p>Java의 Generic Type과 같이 타입을 미리 정해주지 않고, 그때 그때 필요한 타입이 지정될 수 있도록 할 수 있습니다.</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> TypeVar\n\nT <span class=\"token operator\">=</span> TypeVar<span class=\"token punctuation\">(</span><span class=\"token string\">'T'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">temp</span><span class=\"token punctuation\">(</span>var<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span>T<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> T<span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">return</span> var<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">1</span>\na<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"Named-Tuple\"><a href=\"#Named-Tuple\" class=\"headerlink\" title=\"Named Tuple\"></a>Named Tuple</h3><p>마치 Dict 타입 객체처럼 튜플에 key 값을 줄 수 있습니다. class형 문법으로서 사용성과 가독성도 향상 되었습니다. 또한 default 값을 줌으로서 객체를 상속받아 사용할 수 있습니다!</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> NamedTuple\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span>NamedTuple<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span>\n  age<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span>\n  graduated<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\ntommy <span class=\"token operator\">=</span> Student<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">'Tommy'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">=</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> tommy\nStudent<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">'Tommy'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">=</span><span class=\"token number\">26</span><span class=\"token punctuation\">,</span> graduated<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n","text":"TypingTyping 모듈은 파이썬에서 지원하는 타입 힌팅(Type Hinting) 모듈입니다. Type Checking도 아니고 Hinting이라니, 참 요상하죠..? 파이썬이 이런 모듈을 지원하는 것은 파이썬의 독특한 특징이 그 이유입니다. 왜 ...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"python","slug":"python","count":4,"path":"api/categories/python.json"}],"tags":[{"name":"Python","slug":"Python","count":6,"path":"api/tags/Python.json"},{"name":"typing","slug":"typing","count":1,"path":"api/tags/typing.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Typing\"><span class=\"toc-text\">Typing</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%EC%99%9C-Typing-%EB%AA%A8%EB%93%88%EC%9D%B4-%ED%95%84%EC%9A%94%ED%95%A0%EA%B9%8C\"><span class=\"toc-text\">왜 Typing 모듈이 필요할까?</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%93%B0%EC%A3%A0\"><span class=\"toc-text\">어떻게 쓰죠?</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%EC%96%B4%EB%96%A4-%ED%83%80%EC%9E%85%EB%93%A4%EC%9D%B4-%EC%9E%88%EB%82%98%EC%9A%94\"><span class=\"toc-text\">어떤 타입들이 있나요?</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%EB%82%B4%EC%9E%A5-%EC%9E%90%EB%A3%8C-%EA%B5%AC%EC%A1%B0\"><span class=\"toc-text\">내장 자료 구조</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#List\"><span class=\"toc-text\">List</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Dict\"><span class=\"toc-text\">Dict</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Tuple\"><span class=\"toc-text\">Tuple</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Set\"><span class=\"toc-text\">Set</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Final\"><span class=\"toc-text\">Final</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Union\"><span class=\"toc-text\">Union</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Optional\"><span class=\"toc-text\">Optional</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Callable\"><span class=\"toc-text\">Callable</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%ED%83%80%EC%9E%85-%EC%B6%94%EC%83%81%ED%99%94-duck-type\"><span class=\"toc-text\">타입 추상화 (duck-type)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Iterable\"><span class=\"toc-text\">Iterable</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Mapping\"><span class=\"toc-text\">Mapping</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Mutable-Mapping\"><span class=\"toc-text\">Mutable Mapping</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%EC%A0%9C%EB%84%A4%EB%A6%AD-%ED%83%80%EC%9E%85\"><span class=\"toc-text\">제네릭 타입</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#TypeVar\"><span class=\"toc-text\">TypeVar</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Named-Tuple\"><span class=\"toc-text\">Named Tuple</span></a></li></ol></li></ol></li></ol>","author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}},"mapped":true,"prev_post":{"title":"3)📘 Python - Covariance & Contravariance","uid":"c4627b4e684e76e57427d504523ee0e8","slug":"Python/2022-05-06-Python03","date":"2022-05-05T15:00:00.000Z","updated":"2023-03-31T10:40:01.620Z","comments":true,"path":"api/articles/Python/2022-05-06-Python03.json","keywords":null,"cover":null,"text":"Covariance &amp; Contravariance파이썬의 경우를 살펴보기 전에, Covariance와 Contravariance가 무엇인지 알아보기 위해 정적 프로그래밍 언어의 경우를 살펴보겠습니다. 예를 들어, 상위타입 Animal과 서브타입...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"python","slug":"python","count":4,"path":"api/categories/python.json"}],"tags":[{"name":"Python","slug":"Python","count":6,"path":"api/tags/Python.json"}],"author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}}},"next_post":{"title":"1)📘 Python - asyncio","uid":"a531efef964a2f4190bd13943c878d7b","slug":"Python/2022-05-04-Python01","date":"2022-05-03T15:00:00.000Z","updated":"2023-03-31T10:39:43.812Z","comments":true,"path":"api/articles/Python/2022-05-04-Python01.json","keywords":null,"cover":null,"text":"asyncioasyncio란?asyncio는 파이썬에서 사용할 수 있는 비동기 프로그래밍 모듈입니다. async&#x2F;await 함수를 통해 동시적으로 여러 작업들을 수행시킬 수 있습니다. 코루틴을 사용하여 작동하며, 이벤트 루프를 생성하고 관리함...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"python","slug":"python","count":4,"path":"api/categories/python.json"}],"tags":[{"name":"Python","slug":"Python","count":6,"path":"api/tags/Python.json"},{"name":"asyncio","slug":"asyncio","count":1,"path":"api/tags/asyncio.json"}],"author":{"name":"nomatterjun","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/60438045?v=4","link":"/","description":"안녕하세요 👋 <br/> 바쁜 현대인들의 일상에 <br/> 작은 변화를 심고 싶은 개발자 <br/> 이창준입니다.","socials":{"github":"https://github.com/nomatterjun","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"instagram":{"icon":"/assets/instagram.svg","link":"https://www.instagram.com/nomatter_jun/"}}}}}}